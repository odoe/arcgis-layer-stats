import{bD as O,fU as E,r as I,F as s,H as a,fV as $,I as w,J as P,ew as N,f2 as D,ex as T,bs as F,bt as J,bu as M,bv as j,eA as R,eN as U,f0 as A,bx as V,fD as v,fW as f,s as S,L as b,bF as q,A as _,U as k,fi as z,by as C,bm as H,bA as W,bB as B,$ as G}from"./index.e3323316.js";import{n as K}from"./loadAll.096e28c1.js";import{i as Q}from"./scaleUtils.51628f00.js";import{i as X,E as Y,y as Z,n as x,z as ee}from"./SublayersOwner.6e8dbab4.js";import"./Version.f55580df.js";import"./CollectionFlattener.e2759e14.js";function L(e,t){var o;return"floorInfo"in t&&((o=t.floorInfo)==null?void 0:o.floorField)?te(e,t.floorInfo.floorField):null}function te(e,t){if(!(e!=null&&e.length))return null;const o=e.filter(r=>r!=="").map(r=>`'${r}'`);return o.push("''"),`${t} IN (${o.join(",")}) OR ${t} IS NULL`}const re={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let h=class extends O(P){constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(t=>{const o=L(this.floors,t);return t.toExportImageJSON(o)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&X(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",t=>this.notifyChange(re[t.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(t=>t.id).join(","):"show:-1":null}get layerDefs(){var o;const e=!!((o=this.floors)!=null&&o.length),t=this.visibleSublayers.filter(r=>r.definitionExpression!=null||e&&r.floorInfo!=null);return t.length?JSON.stringify(t.reduce((r,i)=>{const n=L(this.floors,i),y=E(n,i.definitionExpression);return I(y)&&(r[i.id]=y),r},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const t=this.layer.sublayers,o=i=>{const n=this.scale,y=n===0,c=i.minScale===0||n<=i.minScale,u=i.maxScale===0||n>=i.maxScale;i.visible&&(y||c&&u)&&(i.sublayers?i.sublayers.forEach(o):e.unshift(i))};t&&t.forEach(o);const r=this._get("visibleSublayers");return!r||r.length!==e.length||r.some((i,n)=>e[n]!==i)?e:r}toJSON(){const e=this.layer;let t={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?t.dynamicLayers=this.dynamicLayers:t={...t,layers:this.layers,layerDefs:this.layerDefs},t}};s([a({readOnly:!0})],h.prototype,"dynamicLayers",null),s([a()],h.prototype,"floors",void 0),s([a({readOnly:!0})],h.prototype,"hasDynamicLayers",null),s([a()],h.prototype,"layer",null),s([a({readOnly:!0})],h.prototype,"layers",null),s([a({readOnly:!0})],h.prototype,"layerDefs",null),s([a({type:Number})],h.prototype,"scale",void 0),s([a($)],h.prototype,"timeExtent",void 0),s([a({readOnly:!0})],h.prototype,"version",null),s([a({readOnly:!0})],h.prototype,"visibleSublayers",null),h=s([w("esri.layers.mixins.ExportImageParameters")],h);let l=class extends N(D(T(Y(Z(F(J(M(j(R(U(A(O(B))))))))))))){constructor(...e){super(...e),this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=I(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(V).then(()=>this._fetchService(t))),Promise.resolve(this)}readImageFormat(e,t){const o=t.supportedImageFormatTypes;return o&&o.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,o,r){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten(({sublayers:p})=>p&&p.toArray().reverse()).toArray();let n=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const p=v(r.origin);if(p===f.PORTAL_ITEM){const m=this.createSublayersForOrigin("service").sublayers;n=x(i,m,f.SERVICE)}else if(p>f.PORTAL_ITEM){const m=this.createSublayersForOrigin("portal-item");n=x(i,m.sublayers,v(m.origin))}}const y=[],c={writeSublayerStructure:n,...r};let u=n;i.forEach(p=>{const m=p.write({},c);y.push(m),u=u||p.originOf("visible")==="user"}),y.some(p=>Object.keys(p).length>1)&&(t.layers=y),u&&(t.visibleLayers=i.filter(p=>p.visible).map(p=>p.id))}createExportImageParameters(e,t,o,r){const i=r&&r.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const n=new h({layer:this,floors:r==null?void 0:r.floors,scale:Q({extent:e,width:t})*i}),y=n.toJSON();n.destroy();const c=!r||!r.rotation||this.version<10.3?{}:{rotation:-r.rotation},u=e&&e.spatialReference,p=u.wkid||JSON.stringify(u.toJSON());y.dpi*=i;const m={};if(r!=null&&r.timeExtent){const{start:d,end:g}=r.timeExtent.toJSON();m.time=d&&g&&d===g?""+d:`${d!=null?d:"null"},${g!=null?g:"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(m.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:p,imageSR:p,size:t+","+o,...y,...c,...m}}async fetchImage(e,t,o,r){var y;const i={responseType:"image",signal:(y=r==null?void 0:r.signal)!=null?y:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(e,t,o,r),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},n=this.parsedUrl.path+"/export";if(i.query.dynamicLayers!=null&&!this.capabilities.exportMap.supportsDynamicLayers)throw new S("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:i.query});return b(n,i).then(c=>c.data).catch(c=>{throw q(c)?c:new S("mapimagelayer:image-fetch-error",`Unable to load image: ${n}`,{error:c})})}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:o}=await b(this.url,t),{extent:r,fullExtent:i,timeExtent:n}=o,y=r||i;return{fullExtent:y&&_.fromJSON(y),timeExtent:n&&k.fromJSON({start:n[0],end:n[1]})}}loadAll(){return K(this,e=>{e(this.allSublayers)})}serviceSupportsSpatialReference(e){return z(this,e)}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:o}=await b(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});o&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};s([a({type:Boolean})],l.prototype,"datesInUnknownTimezone",void 0),s([a()],l.prototype,"dpi",void 0),s([a()],l.prototype,"gdbVersion",void 0),s([a()],l.prototype,"imageFormat",void 0),s([C("imageFormat",["supportedImageFormatTypes"])],l.prototype,"readImageFormat",null),s([a({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],l.prototype,"imageMaxHeight",void 0),s([a({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],l.prototype,"imageMaxWidth",void 0),s([a()],l.prototype,"imageTransparency",void 0),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],l.prototype,"isReference",void 0),s([a({json:{read:!1,write:!1}})],l.prototype,"labelsVisible",void 0),s([a({type:["ArcGISMapServiceLayer"]})],l.prototype,"operationalLayerType",void 0),s([a({json:{read:!1,write:!1}})],l.prototype,"popupEnabled",void 0),s([a()],l.prototype,"sourceJSON",void 0),s([a({json:{write:{ignoreOrigin:!0}}})],l.prototype,"sublayers",void 0),s([H("sublayers",{layers:{type:[ee]},visibleLayers:{type:[G]}})],l.prototype,"writeSublayers",null),s([a({type:["show","hide","hide-children"]})],l.prototype,"listMode",void 0),s([a({json:{read:!1},readOnly:!0,value:"map-image"})],l.prototype,"type",void 0),s([a(W)],l.prototype,"url",void 0),l=s([w("esri.layers.MapImageLayer")],l);const ye=l;export{ye as default};
