import{F as r,H as o,I as E,Z as G,bi as W,j,l as T,eK as P,by as I,cu as K,fz as M,dt as B,bO as H,t as b,L as O,bY as Z,y as Y,ed as k,d8 as X,a8 as ee,ga as te,gb as se,gc as re,gd as ie,r as u,ge as oe,bs as ae,bt as ne,bu as le,ex as pe,bv as de,eN as ue,ca as ce,f3 as N,f as m,bx as ye,b7 as he,w as fe,gf as ge,s as y,g as me,eE as Ie,G as ve,_ as be,ey as we,fW as A,bF as Se,dy as Le,gg as Ee,gh as Te,f$ as Fe,eP as _e,f6 as $e,f7 as je,f8 as D,eW as Oe,gi as xe,eG as Re,eH as Pe,eI as Ne,fb as Ae,eJ as De,bB as Ue}from"./index.96cac272.js";import{N as Ce,L as U}from"./SceneService.2c96baca.js";import{t as Qe,l as qe}from"./FetchAssociatedFeatureLayer.d03db592.js";import{s as V,l as Ge,u as ke,m as Ve}from"./I3SLayerDefinitions.0f9edcdc.js";import{g as Je}from"./persistable.2c66bd3b.js";import{A as ze,W as We}from"./projection.241418a0.js";import"./mat3.f562a113.js";import"./quatf64.74f3afdd.js";import"./mat4f64.ff2a477c.js";import"./quat.b686e95d.js";import{r as Ke,e as Me,I as Be}from"./I3SBinaryReader.2a825731.js";import{u as x}from"./aaBoundingRect.6489c7ff.js";import"./symbolColorUtils.74cb6fc3.js";import{t as He}from"./vec3f32.1121a836.js";import"./plane.74c09a3a.js";import"./originUtils.2d0aad75.js";import"./multiOriginJSONSupportUtils.38b69b9c.js";import"./resourceUtils.ad954e82.js";import"./VertexAttribute.42396f25.js";import"./sphere.5b607634.js";import"./vectorStacks.78a180bd.js";import"./byteSizeEstimations.0938bf46.js";let f=class extends G{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};r([o({type:String,json:{read:!0,write:!0}})],f.prototype,"name",void 0),r([o({type:String,json:{read:!0,write:!0}})],f.prototype,"field",void 0),r([o({type:[Number],json:{read:!0,write:!0}})],f.prototype,"currentRangeExtent",void 0),r([o({type:[Number],json:{read:!0,write:!0}})],f.prototype,"fullRangeExtent",void 0),r([o({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],f.prototype,"type",void 0),f=r([E("esri.layers.support.RangeInfo")],f);var S;let F=S=class extends W(j.ofType(T)){constructor(e){super(e)}clone(){return new S(this.items.map(e=>e.clone()))}write(e,s){return this.toJSON(s)}toJSON(e){var t;const s=(t=e==null?void 0:e.layer)==null?void 0:t.spatialReference;return s?this.toArray().map(a=>{if(!s.equals(a.spatialReference)){if(!ze(a.spatialReference,s))return e&&e.messages&&e.messages.push(new P("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const l=new T;We(a,l,s),a=l}const n=a.toJSON(e);return delete n.spatialReference,n}).filter(a=>a!=null):(e!=null&&e.messages&&e.messages.push(new P("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(a=>a.toJSON(e)))}static fromJSON(e,s){const t=new S;return e.forEach(a=>t.add(T.fromJSON(a,s))),t}};F=S=r([E("esri.layers.support.PolygonCollection")],F);const _=F;var $;let v=$=class extends G{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new _,this._geometriesSource=null,this._handles=new K}initialize(){this._handles.add(M(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,B))}destroy(){this._handles.destroy()}readGeometries(e,s,t){this._geometriesSource={url:H(e,t),context:t}}async loadGeometries(e,s){if(b(this._geometriesSource))return;const{url:t,context:a}=this._geometriesSource,n=await O(t,{responseType:"json",signal:Z(s,"signal")}),l=e.toJSON(),p=n.data.map(c=>({...c,spatialReference:l}));this.geometries=_.fromJSON(p,a),this._geometriesSource=null}clone(){return new $({geometries:Y(this.geometries),spatialRelationship:this.spatialRelationship})}};r([o({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],v.prototype,"spatialRelationship",void 0),r([o({type:_,nonNullable:!0,json:{write:!0}}),Je({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],v.prototype,"geometries",void 0),r([I(["web-scene","portal-item"],"geometries")],v.prototype,"readGeometries",null),v=$=r([E("esri.layers.support.SceneFilter")],v);const Ze=v;var L;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.TRANSPARENT=1]="TRANSPARENT",e[e.OPAQUE=2]="OPAQUE"})(L||(L={}));function Ye(e){return{...Xe,...e,type:"solid"}}const Xe={color:k(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:L.OPAQUE,hasSlicePlane:!1};k(0,0,0,.2),L.OPAQUE;function et(e=[0,0,0],s=[-1,-1,-1],t=[0,0,0,1]){return{center:X(e),halfSize:He(s),quaternion:Ke(t)}}(()=>{const e=new Int8Array(162);let s=0;const t=a=>{for(let n=0;n<a.length;n++)e[s+n]=a[n];s+=6};return t([6,2,3,1,5,4]),t([0,2,3,1,5,4]),t([0,2,3,7,5,4]),t([0,1,3,2,6,4]),t([0,1,3,2,0,0]),t([0,1,5,7,3,2]),t([0,1,3,7,6,4]),t([0,1,3,7,6,2]),t([0,1,5,7,6,2]),t([0,1,5,4,6,2]),t([0,1,5,4,0,0]),t([0,1,3,7,5,4]),t([0,2,6,4,0,0]),t([0,0,0,0,0,0]),t([1,3,7,5,0,0]),t([2,3,7,6,4,0]),t([2,3,7,6,0,0]),t([2,3,1,5,7,6]),t([0,1,5,7,6,2]),t([0,1,5,7,6,4]),t([0,1,3,7,6,4]),t([4,5,7,6,2,0]),t([4,5,7,6,0,0]),t([4,5,1,3,7,6]),t([0,2,3,7,5,4]),t([6,2,3,7,5,4]),t([6,2,3,1,5,4]),e})();x();var C;function tt(e,s,t,a,n){const l=[];for(const p of s)if(p&&n.includes(p.name)){const c=`${e}/nodes/${t}/attributes/${p.key}/0`;l.push({url:c,storageInfo:p})}return ee(l.map(p=>O(p.url,{responseType:"array-buffer"}).then(c=>Be(p.storageInfo,c.data)))).then(p=>{const c=[];for(const w of a){const d={};for(let h=0;h<p.length;h++)p[h].value!=null&&(d[l[h].storageInfo.name]=it(p[h].value,w));c.push(d)}return c})}(function(e){e[e.OUTSIDE=0]="OUTSIDE",e[e.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",e[e.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",e[e.INSIDE=3]="INSIDE"})(C||(C={}));const st=-32768,rt=-(2**31);function it(e,s){if(!e)return null;const t=e[s];return te(e)?t===st?null:t:se(e)?t===rt?null:t:t!=t?null:t}Ye({color:[0,0,0,0],opacity:0});Me();x();x();et();new Array(72);async function ot(e,s=e.popupTemplate){if(b(s))return[];const t=await s.getRequiredFields(e.fieldsIndex),{lastEditInfoEnabled:a}=s,{objectIdField:n,typeIdField:l,globalIdField:p,relationships:c}=e;if(t.includes("*"))return["*"];const w=a?await re(e):[],d=ie(e.fieldsIndex,[...t,...w]);return l&&d.push(l),d&&n&&e.fieldsIndex.has(n)&&!d.includes(n)&&d.push(n),d&&p&&e.fieldsIndex.has(p)&&!d.includes(p)&&d.push(p),c&&c.forEach(h=>{const{keyField:g}=h;d&&g&&e.fieldsIndex.has(g)&&!d.includes(g)&&d.push(g)}),d}function at(e,s){return e.popupTemplate?e.popupTemplate:u(s)&&s.defaultPopupTemplateEnabled&&u(e.defaultPopupTemplate)?e.defaultPopupTemplate:null}const nt=["3DObject","Point"],Q=De();let i=class extends oe(Ce(ae(ne(le(pe(de(ue(Ue)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new j,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,s){var a,n,l,p;const t=(n=(a=this.getFeatureType(s==null?void 0:s.feature))==null?void 0:a.domains)==null?void 0:n[e];return t&&t.type!=="inherited"?t:(p=(l=this.getField(e))==null?void 0:l.domain)!=null?p:null}getFeatureType(e){return e&&u(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return u(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return u(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return u(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new ce(this.fields)}readNodePages(e,s,t){return s.layerType==="Point"&&(e=s.pointNodePages),e==null||typeof e!="object"?null:V.fromJSON(e,t)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return lt[this.profile]||"mesh"}set renderer(e){N(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){const e=u(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:Qe,{query:s,editing:{supportsGlobalId:t,supportsRollbackOnFailure:a,supportsUploadWithItemId:n,supportsReturnServiceEditsInSourceSpatialReference:l},data:{supportsZ:p,supportsM:c,isVersioned:w,supportsAttachment:d},operations:{supportsEditing:h,supportsUpdate:g,supportsQuery:J,supportsQueryAttachments:z}}=e,R=e.operations.supportsChangeTracking;return{query:s,editing:{supportsGlobalId:t,supportsReturnServiceEditsInSourceSpatialReference:l,supportsRollbackOnFailure:a,supportsGeometryUpdate:!1,supportsUploadWithItemId:n},data:{supportsAttachment:d,supportsZ:p,supportsM:c,isVersioned:w},operations:{supportsQuery:J,supportsQueryAttachments:z,supportsEditing:h&&R,supportsAdd:!1,supportsDelete:!1,supportsUpdate:g&&R}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get defaultPopupTemplate(){return u(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,s){return!e&&s.fields&&s.fields.some(t=>(t.type==="esriFieldTypeOID"&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,s){return!e&&s.fields&&s.fields.some(t=>(t.type==="esriFieldTypeGlobalID"&&(e=t.name),!!e)),e||void 0}get displayField(){return u(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,s){const t=s.store.profile;return t!=null&&q[t]?q[t]:(m.getLogger(this.declaredClass).error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")}load(e){const s=u(e)?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(ye).then(()=>this._fetchService(s)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,s),this._setAssociatedFeatureLayer(s),u(this.filter)?this.filter.loadGeometries(this.spatialReference):null])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>he(this,{origin:"service"},s)).then(()=>N(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(t),Promise.resolve(this)}async beforeSave(){u(this.filter)&&await this.load()}createQuery(){const e=new fe;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryExtent(e||this.createQuery(),s))}queryFeatureCount(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatureCount(e||this.createQuery(),s))}queryFeatures(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatures(e||this.createQuery(),s)).then(t=>{if(t!=null&&t.features)for(const a of t.features)a.layer=this,a.sourceLayer=this;return t})}async queryCachedFeature(e,s){const t=ge(this.fieldsIndex,await ot(this,at(this))),a=await tt(this.parsedUrl.path,this.attributeStorageInfo,e,[s],t);if(!a||a.length===0)throw new y("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const n=new me;return n.attributes=a[0],n.layer=this,n.sourceLayer=this,n}queryObjectIds(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryObjectIds(e||this.createQuery(),s))}queryAttachments(e,s){return this._getAssociatedLayerForQuery().then(t=>t.queryAttachments(e,s))}getFieldUsageInfo(e){const s={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||s:(m.getLogger(this.declaredClass).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),s)}createPopupTemplate(e){return Ie(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return u(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),b(this.associatedLayer))throw new y("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new y("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(s=>s.name===e)}async queryCachedStatistics(e,s){if(await this.load(s),!this.statisticsInfo)throw new y("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const t=this.fieldsIndex.get(e);if(!t)throw new y("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const a of this.statisticsInfo)if(a.name===t.name){const n=ve(this.parsedUrl.path,a.href);return O(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:s?s.signal:null}).then(l=>l.data)}throw new y("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,s){return this._debouncedSaveOperations(U.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(U.SAVE,e)}async applyEdits(e,s){const t=await be(()=>import("./editingSupport.35895380.js"),["assets/editingSupport.35895380.js","assets/index.96cac272.js","assets/index.6fd87b6d.css","assets/normalizeUtils.28ae413c.js"]);if(await this.load(),b(this.associatedLayer))throw new y(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),t.applyEdits(this,this.associatedLayer.source,e,s)}on(e,s){return super.on(e,s)}validateLayer(e){if(e.layerType&&!nt.includes(e.layerType))throw new y("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new y("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new y("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function s(t,a){let n=!1,l=!1;if(t==null)n=!0,l=!0;else{const p=a&&a.isGeographic;switch(t){case"east-north-up":case"earth-centered":n=!0,l=p;break;case"vertex-reference-frame":n=!0,l=!p;break;default:n=!1}}if(!n)throw new y("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new y("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}s(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new y("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const s=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(n=>n.name===e.name)),t=!!(u(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(n=>n&&e.name===n.name)),a={supportsLabelingInfo:s,supportsRenderer:s,supportsPopupTemplate:s||t,supportsLayerQuery:t};this._fieldUsageInfo[e.name]=a}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(b(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const s of this.associatedLayer.fields){const t=this.getField(s.name);t?(!t.domain&&s.domain&&(t.domain=s.domain.clone()),t.editable=s.editable,t.nullable=s.nullable,t.length=s.length):(e||(e=this.fields?this.fields.slice():[]),e.push(s.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(b(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],s=we(this);for(let t=0;t<e.length;t++){const a=e[t],n=this.originIdOf(a),l=this.associatedLayer.originIdOf(a);n<l&&(l===A.SERVICE||l===A.PORTAL_ITEM)&&s.setAtOrigin(a,this.associatedLayer[a],l)}}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const s=new qe(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await s.fetch()}catch(t){Se(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Le(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this.declaredClass).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):m.getLogger(this.declaredClass).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&(this.profile==="mesh-pyramids"&&e.mode==="relative-to-scene"&&m.getLogger(this.declaredClass).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&m.getLogger(this.declaredClass).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};r([o({types:{key:"type",base:Ee,typeMap:{selection:Te}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],i.prototype,"featureReduction",void 0),r([o({type:[f],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],i.prototype,"rangeInfos",void 0),r([o({json:{read:!1}})],i.prototype,"associatedLayer",void 0),r([o({type:["show","hide"]})],i.prototype,"listMode",void 0),r([o({type:["ArcGISSceneServiceLayer"]})],i.prototype,"operationalLayerType",void 0),r([o({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),r([o({...Q.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"fields",void 0),r([o()],i.prototype,"types",null),r([o()],i.prototype,"typeIdField",null),r([o()],i.prototype,"formTemplate",null),r([o({readOnly:!0})],i.prototype,"fieldsIndex",null),r([o({type:Fe,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],i.prototype,"floorInfo",void 0),r([o(Q.outFields)],i.prototype,"outFields",void 0),r([o({type:V,readOnly:!0,json:{read:!1}})],i.prototype,"nodePages",void 0),r([I("service","nodePages",["nodePages","pointNodePages"])],i.prototype,"readNodePages",null),r([o({type:[Ge],readOnly:!0})],i.prototype,"materialDefinitions",void 0),r([o({type:[ke],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),r([o({type:[Ve],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),r([o({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),r([o({readOnly:!0})],i.prototype,"attributeStorageInfo",void 0),r([o({readOnly:!0})],i.prototype,"statisticsInfo",void 0),r([o({type:j.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],i.prototype,"excludeObjectIds",void 0),r([o({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r([o({type:Ze,json:{name:"layerDefinition.polygonFilter",write:!0}})],i.prototype,"filter",void 0),r([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),r([o(_e)],i.prototype,"elevationInfo",null),r([o({type:String})],i.prototype,"geometryType",null),r([o($e)],i.prototype,"labelsVisible",void 0),r([o({type:[je],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:D},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:D},write:!0}})],i.prototype,"labelingInfo",void 0),r([o(Oe)],i.prototype,"legendEnabled",void 0),r([o({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,s){var a,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const t=(n=(a=s.layerDefinition)==null?void 0:a.drawingInfo)==null?void 0:n.transparency;return t!==void 0?xe(t):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],i.prototype,"opacity",void 0),r([o({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"priority",void 0),r([o({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"semantic",void 0),r([o({types:Re,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],i.prototype,"renderer",null),r([o({json:{read:!1}})],i.prototype,"cachedDrawingInfo",void 0),r([I("service","cachedDrawingInfo")],i.prototype,"readCachedDrawingInfo",null),r([o({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",null),r([o({type:Boolean,json:{read:!1}})],i.prototype,"editingEnabled",null),r([o(Pe)],i.prototype,"popupEnabled",void 0),r([o({type:Ne,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),r([o({readOnly:!0,json:{read:!1}})],i.prototype,"defaultPopupTemplate",null),r([o({type:String,json:{read:!1}})],i.prototype,"objectIdField",void 0),r([I("service","objectIdField",["objectIdField","fields"])],i.prototype,"readObjectIdField",null),r([o({type:String,json:{read:!1}})],i.prototype,"globalIdField",void 0),r([I("service","globalIdField",["globalIdField","fields"])],i.prototype,"readGlobalIdField",null),r([o({readOnly:!0,type:String,json:{read:!1}})],i.prototype,"displayField",null),r([o({type:String,json:{read:!1}})],i.prototype,"profile",void 0),r([I("service","profile",["store.profile"])],i.prototype,"readProfile",null),r([o({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],i.prototype,"normalReferenceFrame",void 0),r([o(Ae)],i.prototype,"screenSizePerspectiveEnabled",void 0),i=r([E("esri.layers.SceneLayer")],i);const q={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},lt={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},xt=i;export{xt as default};
