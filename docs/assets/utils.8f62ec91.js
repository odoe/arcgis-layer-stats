import{r as y,t as E}from"./index.e3323316.js";import{l as w}from"./ClassBreaksDefinition.c1674261.js";const F=(n,l,t)=>[l,t],x=(n,l,t)=>[l,t,n[2]],M=(n,l,t)=>[l,t,n[2],n[3]];function pn(n){return n?{originPosition:n.originPosition==="upper-left"?"upperLeft":n.originPosition==="lower-left"?"lowerLeft":n.originPosition,scale:n.tolerance?[n.tolerance,n.tolerance]:[1,1],translate:y(n.extent)?[n.extent.xmin,n.extent.ymax]:[0,0]}:null}function P({scale:n,translate:l},t){return Math.round((t-l[0])/n[0])}function B({scale:n,translate:l},t){return Math.round((l[1]-t)/n[1])}function N({scale:n,translate:l},t){return t*n[0]+l[0]}function $({scale:n,translate:l},t){return l[1]-t*n[1]}function k(n,l,t){const e=new Array(t.length);if(!t.length)return e;const[a,u]=n.scale;let i=N(n,t[0][0]),r=$(n,t[0][1]);e[0]=l(t[0],i,r);for(let m=1;m<t.length;m++){const p=t[m];i+=p[0]*a,r-=p[1]*u,e[m]=l(p,i,r)}return e}function q(n,l,t){const e=new Array(t.length);for(let a=0;a<t.length;a++)e[a]=k(n,l,t[a]);return e}function U(n,l,t,e){return k(n,t?e?M:x:e?x:F,l)}function G(n,l,t,e){return q(n,t?e?M:x:e?x:F,l)}function A(n,l,t,e){return q(n,t?e?M:x:e?x:F,l)}function hn(n,l,t,e,a){return l.x=P(n,t.x),l.y=B(n,t.y),l!==t&&(e&&(l.z=t.z),a&&(l.m=t.m)),l}function bn(n,l,t,e,a){return y(t)&&(l.points=U(n,t.points,e,a)),l}function Vn(n,l,t,e,a){return E(t)||(l.x=N(n,t.x),l.y=$(n,t.y),l!==t&&(e&&(l.z=t.z),a&&(l.m=t.m))),l}function gn(n,l,t,e,a){return y(t)&&(l.rings=A(n,t.rings,e,a)),l}function vn(n,l,t,e,a){return y(t)&&(l.paths=G(n,t.paths,e,a)),l}function g(n,l){return Number(n.toFixed(l))}function L(n){const{normalizationTotal:l}=n;return{classBreaks:O(n),normalizationTotal:l}}function O(n){const l=n.definition,{classificationMethod:t,breakCount:e,normalizationType:a,definedInterval:u}=l,i=[];let r=n.values;if(r.length===0)return[];r=r.sort((s,d)=>s-d);const m=r[0],p=r[r.length-1];if(t==="equal-interval")if(r.length>=e){const s=(p-m)/e;let d=m;for(let c=1;c<e;c++){const o=g(m+c*s,6);i.push({minValue:d,maxValue:o,label:b(d,o,a)}),d=o}i.push({minValue:d,maxValue:p,label:b(d,p,a)})}else r.forEach(s=>{i.push({minValue:s,maxValue:s,label:b(s,s,a)})});else if(t==="natural-breaks"){const s=_(r),d=n.valueFrequency||s.valueFrequency,c=Y(s.uniqueValues,d,e);let o=m;for(let f=1;f<e;f++)if(s.uniqueValues.length>f){const h=g(s.uniqueValues[c[f]],6);i.push({minValue:o,maxValue:h,label:b(o,h,a)}),o=h}i.push({minValue:o,maxValue:p,label:b(o,p,a)})}else if(t==="quantile")if(r.length>=e&&m!==p){let s=m,d=Math.ceil(r.length/e),c=0;for(let o=1;o<e;o++){let f=d+c-1;f>r.length&&(f=r.length-1),f<0&&(f=0),i.push({minValue:s,maxValue:r[f],label:b(s,r[f],a)}),s=r[f],c+=d,d=Math.ceil((r.length-c)/(e-o))}i.push({minValue:s,maxValue:p,label:b(s,p,a)})}else{let s=-1;for(let d=0;d<r.length;d++){const c=r[d];c!==s&&(s=c,i.push({minValue:s,maxValue:c,label:b(s,c,a)}),s=c)}}else if(t==="standard-deviation"){const s=H(r),d=J(r,s);if(d===0)i.push({minValue:r[0],maxValue:r[0],label:b(r[0],r[0],a)});else{const c=j(m,p,e,s,d)*d;let o=0,f=m;for(let V=e;V>=1;V--){const T=g(s-(V-.5)*c,6);i.push({minValue:f,maxValue:T,label:b(f,T,a)}),f=T,o++}let h=g(s+.5*c,6);i.push({minValue:f,maxValue:h,label:b(f,h,a)}),f=h,o++;for(let V=1;V<=e;V++)h=o===2*e?p:g(s+(V+.5)*c,6),i.push({minValue:f,maxValue:h,label:b(f,h,a)}),f=h,o++}}else if(t==="defined-interval"){if(!u)return i;const s=r[0],d=r[r.length-1],c=Math.ceil((d-s)/u);let o=s;for(let f=1;f<c;f++){const h=g(s+f*u,6);i.push({minValue:o,maxValue:h,label:b(o,h,a)}),o=h}i.push({minValue:o,maxValue:d,label:b(o,d,a)})}return i}function b(n,l,t){let e=null;return e=n===l?t&&t==="percent-of-total"?n+"%":n.toString():t&&t==="percent-of-total"?n+"% - "+l+"%":n+" - "+l,e}function _(n){const l=[],t=[];let e=Number.MIN_VALUE,a=1,u=-1;for(let i=0;i<n.length;i++){const r=n[i];r===e?(a++,t[u]=a):r!==null&&(l.push(r),e=r,a=1,t.push(a),u++)}return{uniqueValues:l,valueFrequency:t}}function Y(n,l,t){const e=n.length,a=[];t>e&&(t=e);for(let i=0;i<t;i++)a.push(Math.round(i*e/t-1));a.push(e-1);let u=z(a,n,l,t);return Q(u.mean,u.sdcm,a,n,l,t)&&(u=z(a,n,l,t)),a}function z(n,l,t,e){let a=[],u=[],i=[],r=0;const m=[],p=[];for(let o=0;o<e;o++){const f=v(o,n,l,t);m.push(f.sbMean),p.push(f.sbSdcm),r+=p[o]}let s,d=r,c=!0;for(;c||r<d;){c=!1,a=[];for(let o=0;o<e;o++)a.push(n[o]);for(let o=0;o<e;o++)for(let f=n[o]+1;f<=n[o+1];f++)if(s=l[f],o>0&&f!==n[o+1]&&Math.abs(s-m[o])>Math.abs(s-m[o-1]))n[o]=f;else if(o<e-1&&n[o]!==f-1&&Math.abs(s-m[o])>Math.abs(s-m[o+1])){n[o+1]=f-1;break}d=r,r=0,u=[],i=[];for(let o=0;o<e;o++){u.push(m[o]),i.push(p[o]);const f=v(o,n,l,t);m[o]=f.sbMean,p[o]=f.sbSdcm,r+=p[o]}}if(r>d){for(let o=0;o<e;o++)n[o]=a[o],m[o]=u[o],p[o]=i[o];r=d}return{mean:m,sdcm:p}}function Q(n,l,t,e,a,u){let i=0,r=0,m=0,p=0,s=!0;for(let d=0;d<2&&s;d++){d===0&&(s=!1);for(let c=0;c<u-1;c++)for(;t[c+1]+1!==t[c+2];){t[c+1]=t[c+1]+1;const o=v(c,t,e,a);m=o.sbMean,i=o.sbSdcm;const f=v(c+1,t,e,a);if(p=f.sbMean,r=f.sbSdcm,!(i+r<l[c]+l[c+1])){t[c+1]=t[c+1]-1;break}l[c]=i,l[c+1]=r,n[c]=m,n[c+1]=p,s=!0}for(let c=u-1;c>0;c--)for(;t[c]!==t[c-1]+1;){t[c]=t[c]-1;const o=v(c-1,t,e,a);m=o.sbMean,i=o.sbSdcm;const f=v(c,t,e,a);if(p=f.sbMean,r=f.sbSdcm,!(i+r<l[c-1]+l[c])){t[c]=t[c]+1;break}l[c-1]=i,l[c]=r,n[c-1]=m,n[c]=p,s=!0}}return s}function j(n,l,t,e,a){let u=Math.max(e-n,l-e)/a/t;return u=u>=1?1:u>=.5?.5:.25,u}function H(n){let l=0;for(let t=0;t<n.length;t++)l+=n[t];return l/=n.length,l}function J(n,l){let t=0;for(let e=0;e<n.length;e++){const a=n[e];t+=(a-l)*(a-l)}return t/=n.length,Math.sqrt(t)}function v(n,l,t,e){let a=0,u=0;for(let m=l[n]+1;m<=l[n+1];m++){const p=e[m];a+=t[m]*p,u+=p}u<=0&&console.log("Exception in Natural Breaks calculation");const i=a/u;let r=0;for(let m=l[n]+1;m<=l[n+1];m++)r+=e[m]*(t[m]-i)**2;return{sbMean:i,sbSdcm:r}}const K="equal-interval",R=1,W=5,X=10,Z=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,S=new Set(["esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]),nn=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function tn(n){const l=n.normalizationField!=null||n.normalizationType!=null,t=n.minValue!=null||n.maxValue!=null,e=!!n.sqlExpression&&n.supportsSQLExpression;return!l&&!t&&!e}function xn(n){const l=n.returnDistinct?[...new Set(n.values)]:n.values,t=l.filter(a=>a!=null).length,e={count:t};return n.supportsNullCount&&(e.nullcount=l.length-t),n.percentileParams&&(e.median=C(l,n.percentileParams)),e}function ln(n){const{values:l,useSampleStdDev:t,supportsNullCount:e}=n;let a=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,i=null,r=null,m=null,p=null,s=0;const d=n.minValue==null?-1/0:n.minValue,c=n.maxValue==null?1/0:n.maxValue;for(const f of l)Number.isFinite(f)?f>=d&&f<=c&&(i+=f,a=Math.min(a,f),u=Math.max(u,f),s++):typeof f=="string"&&s++;if(s&&i!=null){r=i/s;let f=0;for(const h of l)Number.isFinite(h)&&h>=d&&h<=c&&(f+=(h-r)**2);p=t?s>1?f/(s-1):0:s>0?f/s:0,m=Math.sqrt(p)}else a=null,u=null;const o={avg:r,count:s,max:u,min:a,stddev:m,sum:i,variance:p};return e&&(o.nullcount=l.length-s),n.percentileParams&&(o.median=C(l,n.percentileParams)),o}function C(n,l){const{fieldType:t,value:e,orderBy:a,isDiscrete:u}=l,i=en(t,a==="desc");if((n=[...n].filter(o=>o!=null).sort((o,f)=>i(o,f))).length===0)return null;if(e<=0)return n[0];if(e>=1)return n[n.length-1];const r=(n.length-1)*e,m=Math.floor(r),p=m+1,s=r%1,d=n[m],c=n[p];return p>=n.length||u||typeof d=="string"||typeof c=="string"?d:d*(1-s)+c*s}function en(n,l){const t=l?1:-1,e=an(l),a=D(l);if(!(!!n&&["esriFieldTypeDate","esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...S].includes(n)))return(u,i)=>typeof u=="number"&&typeof i=="number"?e(u,i):typeof u=="string"&&typeof i=="string"?a(u,i):t;if(n==="esriFieldTypeDate")return(u,i)=>{const r=new Date(u).getTime(),m=new Date(i).getTime();return isNaN(r)||isNaN(m)?t:e(r,m)};if(S.has(n))return(u,i)=>e(u,i);if(n==="esriFieldTypeString")return(u,i)=>a(u,i);if(n==="esriFieldTypeGUID"||n==="esriFieldTypeGlobalID"){const u=D(l);return(i,r)=>u(I(i),I(r))}return l?(u,i)=>1:(u,i)=>-1}function D(n){return n?(l,t)=>(l=l==null?void 0:l.toUpperCase(),t=t==null?void 0:t.toUpperCase(),l>t?-1:l<t?1:0):(l,t)=>(l=l==null?void 0:l.toUpperCase(),t=t==null?void 0:t.toUpperCase(),l<t?-1:l>t?1:0)}function an(n){return n?(l,t)=>t-l:(l,t)=>l-t}function I(n){return n.substr(24,12)+n.substr(19,4)+n.substr(16,2)+n.substr(14,2)+n.substr(11,2)+n.substr(9,2)+n.substr(6,2)+n.substr(4,2)+n.substr(2,2)+n.substr(0,2)}function yn(n,l){let t;for(t in n)nn.includes(t)&&(Number.isFinite(n[t])||(n[t]=null));return l&&["avg","stddev","variance"].forEach(e=>{n[e]!=null&&(n[e]=Math.ceil(n[e]))}),n}function Tn(n){const l={};for(let t of n)(t==null||typeof t=="string"&&t.trim()==="")&&(t=null),l[t]==null?l[t]={count:1,data:t}:l[t].count++;return{count:l}}function Fn(n,l,t){const e=n.count,a=[];t&&l&&l.type==="coded-value"&&l.codedValues.forEach(u=>{const i=u.code;e.hasOwnProperty(i)||(e[i]={data:i,count:0})});for(const u in e){const i=e[u];a.push({value:i.data,count:i.count,label:i.label})}return{uniqueValueInfos:a}}function Mn(n,l,t,e){let a=null;switch(l){case"log":n!==0&&(a=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(e)&&e!==0&&(a=n/e*100);break;case"field":Number.isFinite(t)&&t!==0&&(a=n/t);break;case"natural-log":n>0&&(a=Math.log(n));break;case"square-root":n>0&&(a=n**.5)}return a}function on(n,l){const t=un({field:l.field,normalizationType:l.normalizationType,normalizationField:l.normalizationField,classificationMethod:l.classificationMethod,standardDeviationInterval:l.standardDeviationInterval,breakCount:l.numClasses||W});return n=rn(n,l.minValue,l.maxValue),L({definition:t,values:n,normalizationTotal:l.normalizationTotal})}function rn(n,l,t){return l=l!=null?l:-1/0,t=t!=null?t:1/0,n.filter(e=>Number.isFinite(e)&&e>=l&&e<=t)}function un(n){const l=n.field,t=n.classificationMethod||K,e=n.normalizationType,a=n.normalizationField,u=new w;return u.classificationField=l,u.breakCount=n.breakCount,u.classificationMethod=t,u.standardDeviationInterval=t==="standard-deviation"?n.standardDeviationInterval||R:void 0,u.normalizationType=e,u.normalizationField=e==="field"?a:void 0,u}function zn(n,l){let t=n.classBreaks;const e=t.length,a=t[0].minValue,u=t[e-1].maxValue,i=l==="standard-deviation",r=Z;return t=t.map(m=>{const p=m.label,s={minValue:m.minValue,maxValue:m.maxValue,label:p};if(i&&p){const d=p.match(r).map(c=>+c.trim());d.length===2?(s.minStdDev=d[0],s.maxStdDev=d[1],d[0]<0&&d[1]>0&&(s.hasAvg=!0)):d.length===1&&(p.includes("<")?(s.minStdDev=null,s.maxStdDev=d[0]):p.includes(">")&&(s.minStdDev=d[0],s.maxStdDev=null))}return s}),{minValue:a,maxValue:u,classBreakInfos:t,normalizationTotal:n.normalizationTotal}}function Sn(n,l){const{min:t,max:e,intervals:a}=sn(n,l),u=a.map((i,r)=>({minValue:a[r][0],maxValue:a[r][1],count:0}));for(const i of n)if(i!=null&&i>=t&&i<=e){const r=cn(a,i);r>-1&&u[r].count++}return{bins:u,minValue:t,maxValue:e,normalizationTotal:l.normalizationTotal}}function sn(n,l){const{field:t,classificationMethod:e,standardDeviationInterval:a,normalizationType:u,normalizationField:i,normalizationTotal:r,minValue:m,maxValue:p}=l,s=l.numBins||X;let d=null,c=null,o=null;if((!e||e==="equal-interval")&&!u){if(m!=null&&p!=null)d=m,c=p;else{const f=ln({values:n,minValue:m,maxValue:p,useSampleStdDev:!u,supportsNullCount:tn({normalizationType:u,normalizationField:i,minValue:m,maxValue:p})});d=f.min,c=f.max}o=fn(d,c,s)}else{const{classBreaks:f}=on(n,{field:t,normalizationType:u,normalizationField:i,normalizationTotal:r,classificationMethod:e,standardDeviationInterval:a,minValue:m,maxValue:p,numClasses:s});d=f[0].minValue,c=f[f.length-1].maxValue,o=f.map(h=>[h.minValue,h.maxValue])}return{min:d,max:c,intervals:o}}function cn(n,l){let t=-1;for(let e=n.length-1;e>=0;e--)if(l>=n[e][0]){t=e;break}return t}function fn(n,l,t){const e=(l-n)/t,a=[];let u,i=n;for(let r=1;r<=t;r++)u=i+e,u=Number(u.toFixed(16)),a.push([i,r===t?l:u]),i=u;return a}export{gn as B,vn as C,zn as D,hn as O,Mn as T,yn as V,pn as a,ln as c,C as d,en as f,Tn as g,Fn as h,xn as m,bn as q,tn as s,Vn as v,on as y,Sn as z};
