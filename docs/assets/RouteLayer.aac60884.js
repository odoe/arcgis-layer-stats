import{F as t,H as r,g6 as U,I as E,Z as k,eZ as ce,eX as Ze,e_ as ii,e2 as M,e1 as L,fN as se,t as B,by as T,bm as z,s as ie,L as Ne,g7 as Qe,b0 as ri,r as a,O as Wt,ak as Le,g as Y,m as Oe,A as Vt,C as le,k as ye,ah as J,eI as he,l as oi,ff as si,b as ai,es as ni,j as K,f as li,ew as pi,ex as ui,bt as di,bu as mi,bv as ci,bD as yi,fz as bi,V as hi,al as fi,c9 as vi,h as Et,fy as Ti,a as gi,a9 as Si,aa as wi,g8 as Mt,bF as Ni,g9 as Oi,dd as Ai,bB as Di}from"./index.a113d2e4.js";import{i as Ci}from"./originUtils.2d0aad75.js";import{f as Ii,r as Fi}from"./projection.eaf00ec0.js";import{f as Bi}from"./portalItemUtils.1c2b36eb.js";import{e as We,n as Gt}from"./utils.e087d690.js";import{L as ji}from"./normalizeUtils.0f2a534b.js";import"./multiOriginJSONSupportUtils.38b69b9c.js";let ue=class extends k{constructor(e){super(e),this.break=new ce({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new ce({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new ce({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new ce({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new ce({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new ce({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};t([r({types:U})],ue.prototype,"break",void 0),t([r({types:U})],ue.prototype,"first",void 0),t([r({types:U})],ue.prototype,"unlocated",void 0),t([r({types:U})],ue.prototype,"last",void 0),t([r({types:U})],ue.prototype,"middle",void 0),t([r({types:U})],ue.prototype,"waypoint",void 0),ue=t([E("esri.layers.support.RouteStopSymbols")],ue);const qt=ue;let ae=class extends k{constructor(e){super(e),this.directionLines=new Ze({color:[0,122,194],width:6}),this.directionPoints=new ce({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new ce({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new ii({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new Ze({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new Ze({width:8,color:[20,89,127]}),this.stops=new qt}};t([r({types:U})],ae.prototype,"directionLines",void 0),t([r({types:U})],ae.prototype,"directionPoints",void 0),t([r({types:U})],ae.prototype,"pointBarriers",void 0),t([r({types:U})],ae.prototype,"polygonBarriers",void 0),t([r({types:U})],ae.prototype,"polylineBarriers",void 0),t([r({types:U})],ae.prototype,"routeInfo",void 0),t([r({type:qt})],ae.prototype,"stops",void 0),ae=t([E("esri.layers.support.RouteSymbols")],ae);const zt=ae,Kt=M()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),ut=M()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),xi=M()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),Ei=M()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),Mi=M()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});M()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const Zt=M()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});M()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});M()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const Li=M()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),W=M()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),xe=M()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),be=M()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),Ve=M()({1:"right",2:"left"},{useNumericKeys:!0}),X=M()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),Ee=M()({0:"permit",1:"restrict"},{useNumericKeys:!0}),Ge=M()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),qe=M()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),Pi=M()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),Ri=M()({Kilometers:"kilometers",Miles:"miles"},{ignoreUnknown:!1}),Ke=M()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),Q=M()({Kilometers:"kilometers",Miles:"miles",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),ze=M()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),ki=M()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),Ji=M()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),Ui=M()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),$i=M()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});let re=class extends k{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};t([r({type:String})],re.prototype,"dataType",void 0),t([L(Q,{ignoreUnknown:!1})],re.prototype,"name",void 0),t([r({type:[String]})],re.prototype,"parameterNames",void 0),t([r({type:String})],re.prototype,"restrictionUsageParameterName",void 0),t([L(Ke,{ignoreUnknown:!1})],re.prototype,"timeNeutralAttributeName",void 0),t([r({type:String})],re.prototype,"trafficSupport",void 0),t([r({type:String})],re.prototype,"units",void 0),t([L(Ui)],re.prototype,"usageType",void 0),re=t([E("esri.rest.support.NetworkAttribute")],re);const _i=re;let me=class extends k{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};t([r({type:Number})],me.prototype,"buildTime",void 0),t([r({type:String})],me.prototype,"name",void 0),t([r({type:[_i]})],me.prototype,"networkAttributes",void 0),t([r()],me.prototype,"networkSources",void 0),t([r({type:String})],me.prototype,"state",void 0),me=t([E("esri.rest.support.NetworkDataset")],me);const Wi=me;let $=class extends se(k){constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readRestrictionAttributes(e,i){const{restrictionAttributeNames:o}=i;return B(o)?null:o.map(s=>ze.fromJSON(s))}writeRestrictionAttributes(e,i,o){!B(e)&&e.length&&(i[o]=e.map(s=>ze.toJSON(s)))}};t([r({type:[Object],json:{write:!0}})],$.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],$.prototype,"description",void 0),t([L(Ri,{ignoreUnknown:!1})],$.prototype,"distanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],$.prototype,"id",void 0),t([L(Q,{ignoreUnknown:!1})],$.prototype,"impedanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],$.prototype,"name",void 0),t([r({type:[String],json:{write:!0}})],$.prototype,"restrictionAttributeNames",void 0),t([T("restrictionAttributeNames")],$.prototype,"readRestrictionAttributes",null),t([z("restrictionAttributeNames")],$.prototype,"writeRestrictionAttributes",null),t([r({type:Number,json:{write:{allowNull:!0}}})],$.prototype,"simplificationTolerance",void 0),t([L(Kt)],$.prototype,"simplificationToleranceUnits",void 0),t([L(Ke,{ignoreUnknown:!1})],$.prototype,"timeAttributeName",void 0),t([L(Li)],$.prototype,"type",void 0),t([r({type:Boolean,json:{write:!0}})],$.prototype,"useHierarchy",void 0),t([L(Zt)],$.prototype,"uturnAtJunctions",void 0),$=t([E("esri.rest.support.TravelMode")],$);const dt=$;let V=class extends k{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return B(e)?null:e.map(i=>Q.fromJSON(i))}writeAccumulateAttributes(e,i,o){!B(e)&&e.length&&(i[o]=e.map(s=>Q.toJSON(s)))}};t([r()],V.prototype,"accumulateAttributeNames",void 0),t([T("accumulateAttributeNames")],V.prototype,"readAccumulateAttributes",null),t([z("accumulateAttributeNames")],V.prototype,"writeAccumulateAttributes",null),t([r()],V.prototype,"currentVersion",void 0),t([r()],V.prototype,"defaultTravelMode",void 0),t([r()],V.prototype,"directionsLanguage",void 0),t([L(ut)],V.prototype,"directionsLengthUnits",void 0),t([r()],V.prototype,"directionsSupportedLanguages",void 0),t([L(Ke,{ignoreUnknown:!1})],V.prototype,"directionsTimeAttribute",void 0),t([r()],V.prototype,"hasZ",void 0),t([L(Q,{ignoreUnknown:!1})],V.prototype,"impedance",void 0),t([r({type:Wi})],V.prototype,"networkDataset",void 0),t([r({type:[dt]})],V.prototype,"supportedTravelModes",void 0),V=t([E("esri.rest.support.NetworkServiceDescription")],V);const Vi=V;function Pe(e,i,o,s){s[o]=[i.length,i.length+e.length],e.forEach(n=>{i.push(n.geometry)})}function Gi(e,i){for(let o=0;o<i.length;o++){const s=e[i[o]];if(s&&s.length)for(const n of s)n.z=void 0}console.log(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function qi(e,i){for(let o=0;o<i.length;o++){const s=e[i[o]];if(s&&s.length){for(const n of s)if(a(n)&&n.hasZ)return!0}}return!1}async function Ht(e,i,o){if(!e)throw new ie("network-service:missing-url","Url to Network service is missing");const s=We({f:"json",token:i},o),{data:n}=await Ne(e,s);n.supportedTravelModes||(n.supportedTravelModes=[]);for(let h=0;h<n.supportedTravelModes.length;h++)n.supportedTravelModes[h].id||(n.supportedTravelModes[h].id=n.supportedTravelModes[h].itemId);const u=n.currentVersion>=10.4?Ki(e,i,o):zi(e,o),{defaultTravelMode:l,supportedTravelModes:y}=await u;return n.defaultTravelMode=l,n.supportedTravelModes=y,Vi.fromJSON(n)}async function zi(e,i){var F,I,A;const o=We({f:"json"},i),{data:s}=await Ne(e.replace(/\/rest\/.*$/i,"/info"),o);if(!s||!s.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:n}=s,u=Qe(n)+"/sharing/rest/portals/self",{data:l}=await Ne(u,o),y=ri("helperServices.routingUtilities.url",l);if(!y)return{supportedTravelModes:[],defaultTravelMode:null};const h=Gt(n),S=/\/solve$/i.test(h.path)?"Route":/\/solveclosestfacility$/i.test(h.path)?"ClosestFacility":"ServiceAreas",p=We({f:"json",serviceName:S},i),g=Qe(y)+"/GetTravelModes/execute",D=await Ne(g,p),f=[];let d=null;if((I=(F=D==null?void 0:D.data)==null?void 0:F.results)!=null&&I.length){const v=D.data.results;for(const C of v)if(C.paramName==="supportedTravelModes"){if((A=C.value)!=null&&A.features){for(const{attributes:w}of C.value.features)if(w){const j=JSON.parse(w.TravelMode);f.push(j)}}}else C.paramName==="defaultTravelMode"&&(d=C.value)}return{supportedTravelModes:f,defaultTravelMode:d}}async function Ki(e,i,o){try{const s=We({f:"json",token:i},o),n=Qe(e)+"/retrieveTravelModes",{data:{supportedTravelModes:u,defaultTravelMode:l}}=await Ne(n,s);return{supportedTravelModes:u,defaultTravelMode:l}}catch(s){throw new ie("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:s})}}function pe(e,i){if(B(e))return null;const o={},s=new RegExp(`^${i}`,"i");for(const n of Object.keys(e))if(s.test(n)){const u=n.substring(i.length);o[Q.fromJSON(u)]=e[n]}return o}function mt(e,i,o){if(!B(e)){i.attributes||(i.attributes={});for(const s in e){const n=Q.toJSON(s);i.attributes[`${o}${n}`]=e[s]}}}function Ae(e){const i={};for(const o of Object.keys(e)){const s=o;i[Q.fromJSON(s)]=e[o]}return i}function De(e){const i={};for(const o of Object.keys(e)){const s=o;i[Q.toJSON(s)]=e[o]}return i}function Me(e,i){return B(e)||B(i)?null:Math.round((e-i)/6e4)}function Zi(e){const i=e.toJSON(),o=i;return o.accumulateAttributeNames&&(o.accumulateAttributeNames=i.accumulateAttributeNames.join()),o.attributeParameterValues&&(o.attributeParameterValues=JSON.stringify(i.attributeParameterValues)),o.barriers&&(o.barriers=JSON.stringify(i.barriers)),o.outSR&&(o.outSR=i.outSR.wkid),o.overrides&&(o.overrides=JSON.stringify(i.overrides)),o.polygonBarriers&&(o.polygonBarriers=JSON.stringify(i.polygonBarriers)),o.polylineBarriers&&(o.polylineBarriers=JSON.stringify(i.polylineBarriers)),o.restrictionAttributeNames&&(o.restrictionAttributeNames=i.restrictionAttributeNames.join()),o.stops&&(o.stops=JSON.stringify(i.stops)),o.travelMode&&(o.travelMode=JSON.stringify(i.travelMode)),o}const Lt=new Wt({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let Ce=class extends k{constructor(e){super(e),this.description=null,this.type=null}};t([r({type:String,json:{write:!0}})],Ce.prototype,"description",void 0),t([r({type:String,json:{read:Lt.read,write:Lt.write}})],Ce.prototype,"type",void 0),Ce=t([E("esri.rest.support.GPMessage")],Ce);const Hi=Ce,Pt=new Wt({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let $e=class extends Hi{constructor(e){super(e),this.type=null}};t([r({type:String,json:{read:Pt.read,write:Pt.write}})],$e.prototype,"type",void 0),$e=t([E("esri.rest.support.NAMessage")],$e);const Yi=$e;let Ie=class extends k{constructor(e){super(e)}};t([r({json:{read:{source:"string"}}})],Ie.prototype,"text",void 0),t([L($i,{name:"stringType"})],Ie.prototype,"type",void 0),Ie=t([E("esri.rest.support.DirectionsString")],Ie);const Yt=Ie;let de=class extends k{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,i){return Me(i.ETA,i.arriveTimeUTC)}readGeometry(e,i){return Le.fromJSON(i.point)}};t([r({type:Date,json:{read:{source:"arriveTimeUTC"}}})],de.prototype,"arriveTime",void 0),t([r()],de.prototype,"arriveTimeOffset",void 0),t([T("arriveTimeOffset",["arriveTimeUTC","ETA"])],de.prototype,"readArriveTimeOffset",null),t([r({type:Le})],de.prototype,"geometry",void 0),t([T("geometry",["point"])],de.prototype,"readGeometry",null),t([r({type:[Yt]})],de.prototype,"strings",void 0),de=t([E("esri.rest.support.DirectionsEvent")],de);const Xi=de;function Qi(e){if(B(e)||e==="")return null;let i=0,o=0,s=0,n=0;const u=[];let l,y,h,S,p,g,D,f,d=0,F=0,I=0;if(p=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),p||(p=[]),parseInt(p[d],32)===0){d=2;const A=parseInt(p[d],32);d++,g=parseInt(p[d],32),d++,1&A&&(F=p.indexOf("|")+1,D=parseInt(p[F],32),F++),2&A&&(I=p.indexOf("|",F)+1,f=parseInt(p[I],32),I++)}else g=parseInt(p[d],32),d++;for(;d<p.length&&p[d]!=="|";){l=parseInt(p[d],32)+i,d++,i=l,y=parseInt(p[d],32)+o,d++,o=y;const A=[l/g,y/g];F&&(S=parseInt(p[F],32)+s,F++,s=S,A.push(S/D)),I&&(h=parseInt(p[I],32)+n,I++,n=h,A.push(h/f)),u.push(A)}return{paths:[u],hasZ:F>0,hasM:I>0}}let ve=class extends Y{constructor(e){super(e),this.events=null,this.strings=null}readGeometry(e,i){const o=Qi(i.compressedGeometry);return a(o)?Oe.fromJSON(o):null}};t([r({type:[Xi]})],ve.prototype,"events",void 0),t([T("geometry",["compressedGeometry"])],ve.prototype,"readGeometry",null),t([r({type:[Yt]})],ve.prototype,"strings",void 0),ve=t([E("esri.rest.support.DirectionsFeature")],ve);const er=ve;function tr(e,i){if(e.length===0)return new Oe({spatialReference:i});const o=[];for(const l of e)for(const y of l.paths)o.push(...y);const s=[];o.forEach((l,y)=>{y!==0&&l[0]===o[y-1][0]&&l[1]===o[y-1][1]||s.push(l)});const{hasM:n,hasZ:u}=e[0];return new Oe({hasM:n,hasZ:u,paths:[s],spatialReference:i})}let H=class extends le{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,i){var n;if(!e)return[];const o=(n=i.summary.envelope.spatialReference)!=null?n:i.spatialReference,s=o&&ye.fromJSON(o);return e.map(u=>{const l=er.fromJSON(u);if(a(l.geometry)&&(l.geometry.spatialReference=s),a(l.events))for(const y of l.events)a(y.geometry)&&(y.geometry.spatialReference=s);return l})}get mergedGeometry(){return this.features?tr(this.features.map(({geometry:e})=>J(e)),this.extent.spatialReference):null}get strings(){return this.features.map(({strings:e})=>e).flat().filter(a)}};t([r({type:Vt,json:{read:{source:"summary.envelope"}}})],H.prototype,"extent",void 0),t([r()],H.prototype,"features",void 0),t([T("features")],H.prototype,"readFeatures",null),t([r()],H.prototype,"geometryType",void 0),t([r({readOnly:!0})],H.prototype,"mergedGeometry",null),t([r()],H.prototype,"routeId",void 0),t([r()],H.prototype,"routeName",void 0),t([r({value:null,readOnly:!0})],H.prototype,"strings",null),t([r({json:{read:{source:"summary.totalDriveTime"}}})],H.prototype,"totalDriveTime",void 0),t([r({json:{read:{source:"summary.totalLength"}}})],H.prototype,"totalLength",void 0),t([r({json:{read:{source:"summary.totalTime"}}})],H.prototype,"totalTime",void 0),H=t([E("esri.rest.support.DirectionsFeatureSet")],H);const ir=H;let te=class extends k{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};t([r({type:le,json:{write:!0}})],te.prototype,"directionLines",void 0),t([r({type:le,json:{write:!0}})],te.prototype,"directionPoints",void 0),t([r({type:ir,json:{write:!0}})],te.prototype,"directions",void 0),t([r({type:Y,json:{write:!0}})],te.prototype,"route",void 0),t([r({type:String,json:{write:!0}})],te.prototype,"routeName",void 0),t([r({type:[Y],json:{write:!0}})],te.prototype,"stops",void 0),t([r({type:le,json:{write:!0}})],te.prototype,"traversedEdges",void 0),t([r({type:le,json:{write:!0}})],te.prototype,"traversedJunctions",void 0),t([r({type:le,json:{write:!0}})],te.prototype,"traversedTurns",void 0),te=t([E("esri.rest.support.RouteResult")],te);const rr=te;function He(e){return e&&le.fromJSON(e).features.map(i=>i)}let oe=class extends k{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,i){return He(i.barriers)}readPolylineBarriers(e){return He(e)}readPolygonBarriers(e){return He(e)}};t([r({type:[Yi]})],oe.prototype,"messages",void 0),t([r({type:[Y]})],oe.prototype,"pointBarriers",void 0),t([T("pointBarriers",["barriers"])],oe.prototype,"readPointBarriers",null),t([r({type:[Y]})],oe.prototype,"polylineBarriers",void 0),t([T("polylineBarriers")],oe.prototype,"readPolylineBarriers",null),t([r({type:[Y]})],oe.prototype,"polygonBarriers",void 0),t([T("polygonBarriers")],oe.prototype,"readPolygonBarriers",null),t([r({type:[rr]})],oe.prototype,"routeResults",void 0),oe=t([E("esri.rest.support.RouteSolveResult")],oe);const or=oe;function Re(e){return e instanceof le}async function sr(e,i,o){const s=[],n=[],u={},l={},y=Gt(e),{path:h}=y;Re(i.stops)&&Pe(i.stops.features,n,"stops.features",u),Re(i.pointBarriers)&&Pe(i.pointBarriers.features,n,"pointBarriers.features",u),Re(i.polylineBarriers)&&Pe(i.polylineBarriers.features,n,"polylineBarriers.features",u),Re(i.polygonBarriers)&&Pe(i.polygonBarriers.features,n,"polygonBarriers.features",u);const S=await ji(n);for(const f in u){const d=u[f];s.push(f),l[f]=S.slice(d[0],d[1])}if(qi(l,s)){let f=null;try{f=await Ht(h,i.apiKey,o)}catch{}f&&!f.hasZ&&Gi(l,s)}for(const f in l)l[f].forEach((d,F)=>{i.get(f)[F].geometry=d});const p={...o,query:{...y.query,...Zi(i),f:"json"}},g=h.endsWith("/solve")?h:`${h}/solve`,{data:D}=await Ne(g,p);return ar(D)}function ar(e){var A;const{barriers:i,directionLines:o,directionPoints:s,directions:n,messages:u,polygonBarriers:l,polylineBarriers:y,routes:h,stops:S,traversedEdges:p,traversedJunctions:g,traversedTurns:D}=e,f=v=>{const C=F.find(j=>j.routeName===v);if(a(C))return C;const w={routeId:F.length+1,routeName:v};return F.push(w),w},d=v=>{const C=F.find(j=>j.routeId===v);if(a(C))return C;const w={routeId:v,routeName:null};return F.push(w),w},F=[];h==null||h.features.forEach((v,C)=>{v.geometry.spatialReference=h.spatialReference;const w=v.attributes.Name,j=C+1;F.push({routeId:j,routeName:w,route:v})}),n==null||n.forEach(v=>{const{routeName:C}=v;f(C).directions=v});const I=((A=S==null?void 0:S.features.every(v=>B(v.attributes.RouteName)))!=null?A:!1)&&F.length>0?F[0].routeName:null;return S==null||S.features.forEach(v=>{var P,_;var C;v.geometry&&((P=(C=v.geometry).spatialReference)!=null||(C.spatialReference=S.spatialReference));const w=I!=null?I:v.attributes.RouteName,j=f(w);(_=j.stops)!=null||(j.stops=[]),j.stops.push(v)}),o==null||o.features.forEach(v=>{var _;const C=v.attributes.RouteID,w=d(C),{geometryType:j,spatialReference:P}=o;(_=w.directionLines)!=null||(w.directionLines={features:[],geometryType:j,spatialReference:P}),w.directionLines.features.push(v)}),s==null||s.features.forEach(v=>{var _;const C=v.attributes.RouteID,w=d(C),{geometryType:j,spatialReference:P}=s;(_=w.directionPoints)!=null||(w.directionPoints={features:[],geometryType:j,spatialReference:P}),w.directionPoints.features.push(v)}),p==null||p.features.forEach(v=>{var _;const C=v.attributes.RouteID,w=d(C),{geometryType:j,spatialReference:P}=p;(_=w.traversedEdges)!=null||(w.traversedEdges={features:[],geometryType:j,spatialReference:P}),w.traversedEdges.features.push(v)}),g==null||g.features.forEach(v=>{var _;const C=v.attributes.RouteID,w=d(C),{geometryType:j,spatialReference:P}=g;(_=w.traversedJunctions)!=null||(w.traversedJunctions={features:[],geometryType:j,spatialReference:P}),w.traversedJunctions.features.push(v)}),D==null||D.features.forEach(v=>{var j;const C=v.attributes.RouteID,w=d(C);(j=w.traversedTurns)!=null||(w.traversedTurns={features:[]}),w.traversedTurns.features.push(v)}),or.fromJSON({routeResults:F,barriers:i,polygonBarriers:l,polylineBarriers:y,messages:u})}var et;let G=et=class extends se(k){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(e){var i,o;return new et({directionLineType:qe.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:(i=e.attributes.FromLevel)!=null?i:null,geometry:e.geometry,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:(o=e.attributes.ToLevel)!=null?o:null})}toGraphic(){const e={__OBJECTID:J(this.objectId),DirectionLineType:a(this.directionLineType)?qe.toJSON(this.directionLineType):null,DirectionPointID:J(this.directionPointId),Meters:J(this.distance),Minutes:J(this.duration)};return a(this.fromLevel)&&(e.FromLevel=this.fromLevel),a(this.toLevel)&&(e.ToLevel=this.toLevel),new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};G.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],G.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:qe.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:qe.read}}})],G.prototype,"directionLineType",void 0),t([r({json:{read:{source:"attributes.DirectionPointID"}}})],G.prototype,"directionPointId",void 0),t([r({json:{read:{source:"attributes.Meters"}}})],G.prototype,"distance",void 0),t([r({json:{read:{source:"attributes.Minutes"}}})],G.prototype,"duration",void 0),t([r({json:{read:{source:"attributes.FromLevel"}}})],G.prototype,"fromLevel",void 0),t([r({type:Oe})],G.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],G.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],G.prototype,"popupTemplate",void 0),t([r({types:U,json:{read:!1}})],G.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.ToLevel"}}})],G.prototype,"toLevel",void 0),t([r({readOnly:!0,json:{read:!1}})],G.prototype,"type",void 0),G=et=t([E("esri.rest.support.DirectionLine")],G);const Fe=G;var tt;let x=tt=class extends se(k){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(e,i){return a(i.attributes.ArrivalTime)?new Date(i.attributes.ArrivalTime):null}static fromGraphic(e){var i,o,s,n,u,l,y,h,S,p,g,D,f;return new tt({alternateName:(i=e.attributes.AlternateName)!=null?i:null,arrivalTime:a(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:(o=e.attributes.ArrivalUTCOffset)!=null?o:null,azimuth:(s=e.attributes.Azimuth)!=null?s:null,branchName:(n=e.attributes.BranchName)!=null?n:null,directionPointType:Ge.fromJSON(e.attributes.DirectionPointType),displayText:(u=e.attributes.DisplayText)!=null?u:null,exitName:(l=e.attributes.ExitName)!=null?l:null,geometry:e.geometry,intersectingName:(y=e.attributes.IntersectingName)!=null?y:null,level:(h=e.attributes.Level)!=null?h:null,name:(S=e.attributes.Name)!=null?S:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:(p=e.attributes.ShortVoiceInstruction)!=null?p:null,stopId:(g=e.attributes.StopID)!=null?g:null,symbol:e.symbol,towardName:(D=e.attributes.TowardName)!=null?D:null,voiceInstruction:(f=e.attributes.VoiceInstruction)!=null?f:null})}toGraphic(){const e={__OBJECTID:J(this.objectId),DirectionPointType:a(this.directionPointType)?Ge.toJSON(this.directionPointType):null,Sequence:J(this.sequence),StopID:this.stopId};return a(this.alternateName)&&(e.AlternateName=this.alternateName),a(this.arrivalTime)&&(e.ArrivalTime=this.arrivalTime.getTime()),a(this.arrivalTimeOffset)&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),a(this.azimuth)&&(e.Azimuth=this.azimuth),a(this.branchName)&&(e.BranchName=this.branchName),a(this.displayText)&&(e.DisplayText=this.displayText),a(this.exitName)&&(e.ExitName=this.exitName),a(this.intersectingName)&&(e.IntersectingName=this.intersectingName),a(this.level)&&(e.Level=this.level),a(this.name)&&(e.Name=this.name),a(this.shortVoiceInstruction)&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),a(this.towardName)&&(e.TowardName=this.towardName),a(this.voiceInstruction)&&(e.VoiceInstruction=this.voiceInstruction),new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};x.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],x.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],x.prototype,"alternateName",void 0),t([r()],x.prototype,"arrivalTime",void 0),t([T("arrivalTime",["attributes.ArrivalTime"])],x.prototype,"readArrivalTime",null),t([r({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],x.prototype,"arrivalTimeOffset",void 0),t([r({json:{read:{source:"attributes.Azimuth"}}})],x.prototype,"azimuth",void 0),t([r({json:{read:{source:"attributes.BranchName"}}})],x.prototype,"branchName",void 0),t([r({type:Ge.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:Ge.read}}})],x.prototype,"directionPointType",void 0),t([r({json:{read:{source:"attributes.DisplayText"}}})],x.prototype,"displayText",void 0),t([r({json:{read:{source:"attributes.ExitName"}}})],x.prototype,"exitName",void 0),t([r({type:Le})],x.prototype,"geometry",void 0),t([r({json:{read:!1}})],x.prototype,"intersectingName",void 0),t([r({json:{read:!1}})],x.prototype,"level",void 0),t([r({json:{read:{source:"attributes.Name"}}})],x.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],x.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],x.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.Sequence"}}})],x.prototype,"sequence",void 0),t([r({json:{read:!1}})],x.prototype,"shortVoiceInstruction",void 0),t([r({json:{read:{source:"attributes.StopID"}}})],x.prototype,"stopId",void 0),t([r({types:U,json:{read:!1}})],x.prototype,"symbol",void 0),t([r({json:{read:{source:"attributes.TowardName"}}})],x.prototype,"towardName",void 0),t([r({readOnly:!0,json:{read:!1}})],x.prototype,"type",void 0),t([r({json:{read:!1}})],x.prototype,"voiceInstruction",void 0),x=tt=t([E("esri.rest.support.DirectionPoint")],x);const Be=x;var it;let R=it=class extends se(k){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(e,i){return pe(i.attributes,"Attr_")}writeCosts(e,i){mt(e,i,"Attr_")}static fromGraphic(e){var i,o;return new it({addedCost:(i=e.attributes.AddedCost)!=null?i:null,barrierType:a(e.attributes.BarrierType)?X.fromJSON(e.attributes.BarrierType):null,costs:a(e.attributes.Costs)?Ae(JSON.parse(e.attributes.Costs)):null,curbApproach:a(e.attributes.CurbApproach)?W.fromJSON(e.attributes.CurbApproach):null,fullEdge:a(e.attributes.FullEdge)?Ee.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:(o=e.attributes.Name)!=null?o:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:a(e.attributes.Status)?be.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={__OBJECTID:J(this.objectId),AddedCost:this.addedCost,BarrierType:a(this.barrierType)?X.toJSON(this.barrierType):null,Costs:a(this.costs)?JSON.stringify(De(this.costs)):null,CurbApproach:a(this.curbApproach)?W.toJSON(this.curbApproach):null,FullEdge:a(this.fullEdge)?Ee.toJSON(this.fullEdge):null,Name:this.name,Status:a(this.status)?be.toJSON(this.status):null};return new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};R.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],R.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],R.prototype,"addedCost",void 0),t([r({type:X.apiValues,json:{name:"attributes.BarrierType",read:{reader:X.read},write:{writer:X.write}}})],R.prototype,"barrierType",void 0),t([r()],R.prototype,"costs",void 0),t([T("costs",["attributes"])],R.prototype,"readCosts",null),t([z("costs")],R.prototype,"writeCosts",null),t([r({type:W.apiValues,json:{read:{source:"attributes.CurbApproach",reader:W.read}}})],R.prototype,"curbApproach",void 0),t([r({type:Ee.apiValues,json:{name:"attributes.FullEdge",read:{reader:Ee.read},write:{writer:Ee.write}}})],R.prototype,"fullEdge",void 0),t([r({type:Le,json:{write:!0}})],R.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],R.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],R.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],R.prototype,"popupTemplate",void 0),t([r({type:Ve.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Ve.read}}})],R.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],R.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],R.prototype,"sourceOid",void 0),t([r({type:be.apiValues,json:{read:{source:"attributes.Status",reader:be.read}}})],R.prototype,"status",void 0),t([r({types:U,json:{read:!1}})],R.prototype,"symbol",void 0),t([r({readOnly:!0,json:{read:!1}})],R.prototype,"type",void 0),R=it=t([E("esri.rest.support.PointBarrier")],R);const Te=R;var rt;let q=rt=class extends se(k){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(e,i){return pe(i.attributes,"Attr_")}writeCosts(e,i){mt(e,i,"Attr_")}static fromGraphic(e){var i,o;return new rt({barrierType:a(e.attributes.BarrierType)?X.fromJSON(e.attributes.BarrierType):null,costs:a(e.attributes.Costs)?Ae(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:(i=e.attributes.Name)!=null?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:(o=e.attributes.ScaleFactor)!=null?o:null,symbol:e.symbol})}toGraphic(){var i,o;const e={__OBJECTID:J(this.objectId),BarrierType:a(this.barrierType)?X.toJSON(this.barrierType):null,Costs:a(this.costs)?JSON.stringify(De(this.costs)):null,Name:(i=this.name)!=null?i:null,ScaleFactor:(o=this.scaleFactor)!=null?o:null};return new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};q.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],q.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:X.apiValues,json:{name:"attributes.BarrierType",read:{reader:X.read},write:{writer:X.write}}})],q.prototype,"barrierType",void 0),t([r()],q.prototype,"costs",void 0),t([T("costs",["attributes"])],q.prototype,"readCosts",null),t([z("costs")],q.prototype,"writeCosts",null),t([r({type:oi,json:{write:!0}})],q.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],q.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],q.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],q.prototype,"popupTemplate",void 0),t([r({json:{read:!1}})],q.prototype,"scaleFactor",void 0),t([r({types:U,json:{read:!1}})],q.prototype,"symbol",void 0),t([r({readOnly:!0,json:{read:!1}})],q.prototype,"type",void 0),q=rt=t([E("esri.rest.support.PolygonBarrier")],q);const ge=q;var ot;let Z=ot=class extends se(k){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(e,i){return pe(i.attributes,"Attr_")}static fromGraphic(e){var i,o;return new ot({barrierType:a(e.attributes.BarrierType)?X.fromJSON(e.attributes.BarrierType):null,costs:a(e.attributes.Costs)?Ae(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:(i=e.attributes.Name)!=null?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:(o=e.attributes.ScaleFactor)!=null?o:null,symbol:e.symbol})}toGraphic(){const e={__OBJECTID:J(this.objectId),BarrierType:a(this.barrierType)?X.toJSON(this.barrierType):null,Costs:a(this.costs)?JSON.stringify(De(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};Z.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],Z.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:X.apiValues,json:{read:{source:"attributes.BarrierType",reader:X.read}}})],Z.prototype,"barrierType",void 0),t([r()],Z.prototype,"costs",void 0),t([T("costs",["attributes"])],Z.prototype,"readCosts",null),t([r({type:Oe,json:{write:!0}})],Z.prototype,"geometry",void 0),t([r({json:{name:"attributes.Name"}})],Z.prototype,"name",void 0),t([r({json:{name:"attributes.ObjectID"}})],Z.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],Z.prototype,"popupTemplate",void 0),t([r({json:{read:!1}})],Z.prototype,"scaleFactor",void 0),t([r({types:U,json:{read:!1}})],Z.prototype,"symbol",void 0),t([r({readOnly:!0,json:{read:!1}})],Z.prototype,"type",void 0),Z=ot=t([E("esri.rest.support.PolylineBarrier")],Z);const Se=Z;let ee=class extends k{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(e){return B(e)?null:e.map(i=>Q.fromJSON(i))}writeAccumulateAttributes(e,i,o){!B(e)&&e.length&&(i[o]=e.map(s=>Q.toJSON(s)))}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],ee.prototype,"accumulateAttributes",void 0),t([T("accumulateAttributes")],ee.prototype,"readAccumulateAttributes",null),t([z("accumulateAttributes")],ee.prototype,"writeAccumulateAttributes",null),t([r({type:String,json:{write:!0}})],ee.prototype,"directionsLanguage",void 0),t([r({type:Boolean,json:{write:!0}})],ee.prototype,"findBestSequence",void 0),t([r({type:Boolean,json:{write:!0}})],ee.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],ee.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],ee.prototype,"startTimeIsUTC",void 0),t([r({type:Boolean,json:{write:!0}})],ee.prototype,"timeWindowsAreUTC",void 0),t([r({type:dt,json:{write:!0}})],ee.prototype,"travelMode",void 0),ee=t([E("esri.layers.support.RouteSettings")],ee);const Xt=ee;var st;let N=st=class extends se(k){constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(e,i){return a(i.attributes.EndTimeUTC)?new Date(i.attributes.EndTimeUTC):null}readEndTimeOffset(e,i){return Me(i.attributes.EndTime,i.attributes.EndTimeUTC)}readStartTime(e,i){return a(i.attributes.StartTimeUTC)?new Date(i.attributes.StartTimeUTC):null}readStartTimeOffset(e,i){return Me(i.attributes.StartTime,i.attributes.StartTimeUTC)}readTotalCosts(e,i){return pe(i.attributes,"Total_")}readTotalViolations(e,i){return pe(i.attributes,"TotalViolation_")}readTotalWait(e,i){return pe(i.attributes,"TotalWait_")}static fromGraphic(e){var i,o,s,n,u,l;return new st({analysisSettings:a(e.attributes.AnalysisSettings)?Xt.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:a(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:(i=e.attributes.EndUTCOffset)!=null?i:null,geometry:e.geometry,messages:a(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,startTime:a(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:(o=e.attributes.StartUTCOffset)!=null?o:null,symbol:e.symbol,totalCosts:a(e.attributes.TotalCosts)?Ae(JSON.parse(e.attributes.TotalCosts)):null,totalDistance:(s=e.attributes.TotalMeters)!=null?s:null,totalDuration:(n=e.attributes.TotalMinutes)!=null?n:null,totalLateDuration:(u=e.attributes.TotalLateMinutes)!=null?u:null,totalWaitDuration:(l=e.attributes.TotalWaitMinutes)!=null?l:null,version:e.attributes.Version})}toGraphic(){const e={__OBJECTID:J(this.objectId),AnalysisSettings:a(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:a(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:a(this.messages)?JSON.stringify(this.messages):null,RouteName:J(this.name),StartTime:a(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:a(this.totalCosts)?JSON.stringify(De(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:J(this.version)};return new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:J(this.popupTemplate)})}};N.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],N.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({json:{read:!1}})],N.prototype,"analysisSettings",void 0),t([r()],N.prototype,"endTime",void 0),t([T("endTime",["attributes.EndTimeUTC"])],N.prototype,"readEndTime",null),t([r()],N.prototype,"endTimeOffset",void 0),t([T("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],N.prototype,"readEndTimeOffset",null),t([r({json:{read:{source:"attributes.FirstStopID"}}})],N.prototype,"firstStopId",void 0),t([r({type:Oe})],N.prototype,"geometry",void 0),t([r({json:{read:{source:"attributes.LastStopID"}}})],N.prototype,"lastStopId",void 0),t([r({json:{read:!1}})],N.prototype,"messages",void 0),t([r({json:{read:{source:"attributes.Name"}}})],N.prototype,"name",void 0),t([r({json:{read:{source:"attributes.ObjectID"}}})],N.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],N.prototype,"popupTemplate",void 0),t([r()],N.prototype,"startTime",void 0),t([T("startTime",["attributes.StartTimeUTC"])],N.prototype,"readStartTime",null),t([r()],N.prototype,"startTimeOffset",void 0),t([T("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],N.prototype,"readStartTimeOffset",null),t([r({json:{read:{source:"attributes.StopCount"}}})],N.prototype,"stopCount",void 0),t([r({types:U,json:{read:!1}})],N.prototype,"symbol",void 0),t([r()],N.prototype,"totalCosts",void 0),t([T("totalCosts",["attributes"])],N.prototype,"readTotalCosts",null),t([r({json:{read:!1}})],N.prototype,"totalDistance",void 0),t([r({json:{read:!1}})],N.prototype,"totalDuration",void 0),t([r({json:{read:!1}})],N.prototype,"totalLateDuration",void 0),t([r()],N.prototype,"totalViolations",void 0),t([T("totalViolations",["attributes"])],N.prototype,"readTotalViolations",null),t([r()],N.prototype,"totalWait",void 0),t([T("totalWait",["attributes"])],N.prototype,"readTotalWait",null),t([r({json:{read:!1}})],N.prototype,"totalWaitDuration",void 0),t([r({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),t([r({json:{read:!1}})],N.prototype,"version",void 0),N=st=t([E("esri.rest.support.RouteInfo")],N);const ke=N,nr={type:String,json:{read:{source:"token"},write:{target:"token"}}};let ne=class extends se(k){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};t([r({type:Boolean,json:{write:!0}})],ne.prototype,"doNotLocateOnRestrictedElements",void 0),t([r({types:si,json:{read:ai,write:!0}})],ne.prototype,"geometry",void 0),t([L(Ji)],ne.prototype,"geometryType",void 0),t([r({type:String,json:{name:"layerName",write:!0}})],ne.prototype,"name",void 0),t([L(ki,{name:"spatialRel"})],ne.prototype,"spatialRelationship",void 0),t([r({type:String,json:{write:!0}})],ne.prototype,"type",void 0),t([r({type:String,json:{write:!0}})],ne.prototype,"where",void 0),ne=t([E("esri.rest.support.DataLayer")],ne);const lr=ne;var at;let _e=at=class extends le{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new at({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};t([r({type:Boolean,json:{write:!0}})],_e.prototype,"doNotLocateOnRestrictedElements",void 0),_e=at=t([E("esri.rest.support.NetworkFeatureSet")],_e);const pr=_e;let je=class extends se(k){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};t([r({type:Boolean,json:{write:!0}})],je.prototype,"doNotLocateOnRestrictedElements",void 0),t([r({type:String,json:{write:!0}})],je.prototype,"url",void 0),je=t([E("esri.rest.support.NetworkUrl")],je);const ur=je;var nt;function dr(e){return e&&"type"in e}function mr(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function cr(e){return e&&"url"in e}function yr(e){return e&&"features"in e}function br(e){return dr(e)?lr.fromJSON(e):cr(e)?ur.fromJSON(e):mr(e)?pr.fromJSON(e):yr(e)?le.fromJSON(e):null}function Je(e,i,o){a(e)&&(i[o]=K.isCollection(e)?{features:e.toArray().map(s=>s.toJSON())}:e.toJSON())}let m=nt=class extends se(k){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return ni(nt,e)}readAccumulateAttributes(e){return B(e)?null:e.map(i=>Q.fromJSON(i))}writeAccumulateAttributes(e,i,o){!B(e)&&e.length&&(i[o]=e.map(s=>Q.toJSON(s)))}writePointBarriers(e,i,o){Je(e,i,o)}writePolygonBarrier(e,i,o){Je(e,i,o)}writePolylineBarrier(e,i,o){Je(e,i,o)}readRestrictionAttributes(e){return B(e)?null:e.map(i=>ze.fromJSON(i))}writeRestrictionAttributes(e,i,o){!B(e)&&e.length&&(i[o]=e.map(s=>ze.toJSON(s)))}readStartTime(e,i){const{startTime:o}=i;return B(o)?null:o==="now"?"now":new Date(o)}writeStartTime(e,i){B(e)||(i.startTime=e==="now"?"now":e.getTime())}readStops(e,i){return br(i.stops)}writeStops(e,i,o){Je(e,i,o)}};t([r({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],m.prototype,"accumulateAttributes",void 0),t([T("accumulateAttributes")],m.prototype,"readAccumulateAttributes",null),t([z("accumulateAttributes")],m.prototype,"writeAccumulateAttributes",null),t([r(nr)],m.prototype,"apiKey",void 0),t([r({json:{write:!0}})],m.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],m.prototype,"directionsLanguage",void 0),t([L(ut)],m.prototype,"directionsLengthUnits",void 0),t([L(Ei)],m.prototype,"directionsOutputType",void 0),t([L(Pi)],m.prototype,"directionsStyleName",void 0),t([L(Ke,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],m.prototype,"directionsTimeAttribute",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"findBestSequence",void 0),t([r({type:Number,json:{write:!0}})],m.prototype,"geometryPrecision",void 0),t([r({type:Number,json:{write:!0}})],m.prototype,"geometryPrecisionM",void 0),t([r({type:Number,json:{write:!0}})],m.prototype,"geometryPrecisionZ",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"ignoreInvalidLocations",void 0),t([L(Q,{name:"impedanceAttributeName",ignoreUnknown:!1})],m.prototype,"impedanceAttribute",void 0),t([r({type:Number,json:{write:!0}})],m.prototype,"outputGeometryPrecision",void 0),t([L(Kt)],m.prototype,"outputGeometryPrecisionUnits",void 0),t([L(Mi)],m.prototype,"outputLines",void 0),t([r({type:ye,json:{name:"outSR",write:!0}})],m.prototype,"outSpatialReference",void 0),t([r({json:{write:!0}})],m.prototype,"overrides",void 0),t([r({json:{name:"barriers",write:!0}})],m.prototype,"pointBarriers",void 0),t([z("pointBarriers")],m.prototype,"writePointBarriers",null),t([r({json:{write:!0}})],m.prototype,"polygonBarriers",void 0),t([z("polygonBarriers")],m.prototype,"writePolygonBarrier",null),t([r({json:{write:!0}})],m.prototype,"polylineBarriers",void 0),t([z("polylineBarriers")],m.prototype,"writePolylineBarrier",null),t([r({type:Boolean,json:{write:!0}})],m.prototype,"preserveFirstStop",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"preserveLastStop",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"preserveObjectID",void 0),t([r({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],m.prototype,"restrictionAttributes",void 0),t([T("restrictionAttributes")],m.prototype,"readRestrictionAttributes",null),t([z("restrictionAttributes")],m.prototype,"writeRestrictionAttributes",null),t([L(Zt)],m.prototype,"restrictUTurns",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnDirections",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnPolygonBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnPolylineBarriers",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnRoutes",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnStops",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnTraversedEdges",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnTraversedJunctions",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnTraversedTurns",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"returnZ",void 0),t([r({type:Date,json:{type:Number,write:!0}})],m.prototype,"startTime",void 0),t([T("startTime")],m.prototype,"readStartTime",null),t([z("startTime")],m.prototype,"writeStartTime",null),t([r({type:Boolean,json:{write:!0}})],m.prototype,"startTimeIsUTC",void 0),t([r({json:{write:!0}})],m.prototype,"stops",void 0),t([T("stops")],m.prototype,"readStops",null),t([z("stops")],m.prototype,"writeStops",null),t([r({type:Boolean,json:{write:!0}})],m.prototype,"timeWindowsAreUTC",void 0),t([r({type:dt,json:{write:!0}})],m.prototype,"travelMode",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"useHierarchy",void 0),t([r({type:Boolean,json:{write:!0}})],m.prototype,"useTimeWindows",void 0),m=nt=t([E("esri.rest.support.RouteParameters")],m);const Rt=m;var lt;let c=lt=class extends se(k){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,i){return Me(i.attributes.ArriveTime,i.attributes.ArriveTimeUTC)}readCumulativeCosts(e,i){return pe(i.attributes,"Cumul_")}readDepartTimeOffset(e,i){return Me(i.attributes.DepartTime,i.attributes.DepartTimeUTC)}readServiceCosts(e,i){return pe(i.attributes,"Attr_")}writeServiceCosts(e,i){mt(e,i,"Attr_")}writeTimeWindowEnd(e,i){B(e)||(i.attributes||(i.attributes={}),i.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,i){B(e)||(i.attributes||(i.attributes={}),i.attributes.TimeWindowStart=e.getTime())}readViolations(e,i){return pe(i.attributes,"Violation_")}readWait(e,i){return pe(i.attributes,"Wait_")}static fromGraphic(e){var i,o,s,n,u,l,y,h,S,p;return new lt({arriveCurbApproach:a(e.attributes.ArrivalCurbApproach)?W.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:a(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:a(e.attributes.CumulativeCosts)?Ae(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:(i=e.attributes.CumulativeMeters)!=null?i:null,cumulativeDuration:(o=e.attributes.CumulativeMinutes)!=null?o:null,curbApproach:a(e.attributes.CurbApproach)?W.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:a(e.attributes.DepartureCurbApproach)?W.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:a(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:(s=e.attributes.DepartureUTCOffset)!=null?s:null,geometry:e.geometry,lateDuration:(n=e.attributes.LateMinutes)!=null?n:null,locationType:a(e.attributes.LocationType)?xe.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:(u=e.attributes.Sequence)!=null?u:null,serviceCosts:a(e.attributes.ServiceCosts)?Ae(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:(l=e.attributes.ServiceMeters)!=null?l:null,serviceDuration:(y=e.attributes.ServiceMinutes)!=null?y:null,status:a(e.attributes.Status)?be.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:a(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:(h=e.attributes.TimeWindowEndUTCOffset)!=null?h:null,timeWindowStart:a(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:(S=e.attributes.TimeWindowStartUTCOffset)!=null?S:null,waitDuration:(p=e.attributes.WaitMinutes)!=null?p:null})}toGraphic(){var i,o;const e={__OBJECTID:J(this.objectId),ArrivalCurbApproach:a(this.arriveCurbApproach)?W.toJSON(this.arriveCurbApproach):null,ArrivalTime:a(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:a(this.cumulativeCosts)?JSON.stringify(De(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:a(this.curbApproach)?W.toJSON(this.curbApproach):null,DepartureCurbApproach:a(this.departCurbApproach)?W.toJSON(this.departCurbApproach):null,DepartureTime:a(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:a(this.locationType)?xe.toJSON(this.locationType):null,Name:J(this.name),RouteName:J(this.routeName),Sequence:this.sequence,ServiceCosts:a(this.serviceCosts)?JSON.stringify(De(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:a(this.status)?be.toJSON(this.status):null,TimeWindowEnd:a(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:(i=this.timeWindowEndOffset)!=null?i:this.arriveTimeOffset,TimeWindowStart:a(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:(o=this.timeWindowEndOffset)!=null?o:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new Y({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};c.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],c.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},t([r({type:W.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:W.read}}})],c.prototype,"arriveCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],c.prototype,"arriveTime",void 0),t([r()],c.prototype,"arriveTimeOffset",void 0),t([T("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],c.prototype,"readArriveTimeOffset",null),t([r({json:{name:"attributes.Bearing",read:!1,write:!0}})],c.prototype,"bearing",void 0),t([r({json:{name:"attributes.BearingTol",read:!1,write:!0}})],c.prototype,"bearingTol",void 0),t([r()],c.prototype,"cumulativeCosts",void 0),t([T("cumulativeCosts",["attributes"])],c.prototype,"readCumulativeCosts",null),t([r({json:{read:!1}})],c.prototype,"cumulativeDistance",void 0),t([r({json:{read:!1}})],c.prototype,"cumulativeDuration",void 0),t([r({type:W.apiValues,json:{name:"attributes.CurbApproach",read:{reader:W.read},write:{writer:W.write}}})],c.prototype,"curbApproach",void 0),t([r({type:W.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:W.read}}})],c.prototype,"departCurbApproach",void 0),t([r({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],c.prototype,"departTime",void 0),t([r()],c.prototype,"departTimeOffset",void 0),t([T("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],c.prototype,"readDepartTimeOffset",null),t([r({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],c.prototype,"distanceToNetworkInMeters",void 0),t([r({type:Le,json:{write:!0}})],c.prototype,"geometry",void 0),t([r({json:{name:"attributes.LateMinutes",read:!1}})],c.prototype,"lateDuration",void 0),t([r({type:xe.apiValues,json:{name:"attributes.LocationType",read:{reader:xe.read},write:{writer:xe.write}}})],c.prototype,"locationType",void 0),t([r({json:{name:"attributes.Name"}})],c.prototype,"name",void 0),t([r({json:{read:{source:"attributes.NavLatency"}}})],c.prototype,"navLatency",void 0),t([r({json:{name:"attributes.ObjectID"}})],c.prototype,"objectId",void 0),t([r({type:he,json:{read:!1}})],c.prototype,"popupTemplate",void 0),t([r({json:{read:{source:"attributes.PosAlong"}}})],c.prototype,"posAlong",void 0),t([r({json:{name:"attributes.RouteName"}})],c.prototype,"routeName",void 0),t([r()],c.prototype,"serviceCosts",void 0),t([T("serviceCosts",["attributes"])],c.prototype,"readServiceCosts",null),t([z("serviceCosts")],c.prototype,"writeServiceCosts",null),t([r({json:{read:!1}})],c.prototype,"serviceDistance",void 0),t([r({json:{read:!1}})],c.prototype,"serviceDuration",void 0),t([r({json:{name:"attributes.Sequence"}})],c.prototype,"sequence",void 0),t([r({type:Ve.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:Ve.read}}})],c.prototype,"sideOfEdge",void 0),t([r({json:{read:{source:"attributes.SnapX"}}})],c.prototype,"snapX",void 0),t([r({json:{read:{source:"attributes.SnapY"}}})],c.prototype,"snapY",void 0),t([r({json:{read:{source:"attributes.SnapZ"}}})],c.prototype,"snapZ",void 0),t([r({json:{read:{source:"attributes.SourceID"}}})],c.prototype,"sourceId",void 0),t([r({json:{read:{source:"attributes.SourceOID"}}})],c.prototype,"sourceOid",void 0),t([r({type:be.apiValues,json:{read:{source:"attributes.Status",reader:be.read}}})],c.prototype,"status",void 0),t([r({types:U,json:{read:!1}})],c.prototype,"symbol",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowEnd"}})],c.prototype,"timeWindowEnd",void 0),t([z("timeWindowEnd")],c.prototype,"writeTimeWindowEnd",null),t([r({json:{read:!1}})],c.prototype,"timeWindowEndOffset",void 0),t([r({type:Date,json:{name:"attributes.TimeWindowStart"}})],c.prototype,"timeWindowStart",void 0),t([z("timeWindowStart")],c.prototype,"writeTimeWindowStart",null),t([r({json:{read:!1}})],c.prototype,"timeWindowStartOffset",void 0),t([r({readOnly:!0,json:{read:!1}})],c.prototype,"type",void 0),t([r()],c.prototype,"violations",void 0),t([T("violations",["attributes"])],c.prototype,"readViolations",null),t([r({json:{read:!1}})],c.prototype,"waitDuration",void 0),t([r()],c.prototype,"wait",void 0),t([T("wait",["attributes"])],c.prototype,"readWait",null),c=lt=t([E("esri.rest.support.Stop")],c);const we=c;function Ye(e){return e.length?e:null}function Qt(e){const{defaultTravelMode:i,supportedTravelModes:o}=e;return o.find(s=>s.id===i)}function pt(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:pt("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:pt("esriGeometryPolyline")}}}function Ue(e){return"layers"in e}function hr(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function fr(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function vr(e,i,o){var _,ct,yt,bt,ht,ft,vt,Tt,gt,St,wt,Nt,Ot,At,Dt,Ct,It,Ft,Bt,jt;const s=i.networkDataset.networkAttributes.filter(b=>b.usageType==="cost"),n=Qt(i),u=(_=o.travelMode)!=null?_:n;if(B(u))return void ti.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:l,distanceAttributeName:y}=u,h=s.find(b=>b.name===l),S=s.find(b=>b.name===y),p=(bt=(yt=(ct=J(o.travelMode))==null?void 0:ct.impedanceAttributeName)!=null?yt:J(o.impedanceAttribute))!=null?bt:i.impedance,g=xi.fromJSON(h==null?void 0:h.units),D=ut.fromJSON(S==null?void 0:S.units);if(!g||!D)throw new ie("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const f=(ht=o.directionsLanguage)!=null?ht:i.directionsLanguage,d=(vt=(ft=J(o.accumulateAttributes))!=null?ft:i.accumulateAttributeNames)!=null?vt:[],F=new Set(s.filter(({name:b})=>b===l||b===y||b===p||d.includes(b)).map(({name:b})=>b)),I=b=>{for(const xt in b)F.has(xt)||delete b[xt]};for(const b of e.pointBarriers)a(b.costs)&&(b.addedCost=(Tt=b.costs[p])!=null?Tt:0,I(b.costs));for(const b of e.polygonBarriers)a(b.costs)&&(b.scaleFactor=(gt=b.costs[p])!=null?gt:1,I(b.costs));for(const b of e.polylineBarriers)a(b.costs)&&(b.scaleFactor=(St=b.costs[p])!=null?St:1,I(b.costs));const{routeInfo:A}=e,{findBestSequence:v,preserveFirstStop:C,preserveLastStop:w,startTimeIsUTC:j,timeWindowsAreUTC:P}=o;A.analysisSettings=new Xt({accumulateAttributes:d,directionsLanguage:f,findBestSequence:v,preserveFirstStop:C,preserveLastStop:w,startTimeIsUTC:j,timeWindowsAreUTC:P,travelMode:u}),A.totalDuration=fe((wt=A.totalCosts[l])!=null?wt:0,g),A.totalDistance=Xe((Nt=A.totalCosts[y])!=null?Nt:0,D),A.totalLateDuration=fe((Ot=A.totalViolations[l])!=null?Ot:0,g),A.totalWaitDuration=fe((At=A.totalWait[l])!=null?At:0,g),a(A.totalCosts)&&I(A.totalCosts),a(A.totalViolations)&&I(A.totalViolations),a(A.totalWait)&&I(A.totalWait);for(const b of e.stops)a(b.serviceCosts)&&(b.serviceDuration=fe((Dt=b.serviceCosts[l])!=null?Dt:0,g),b.serviceDistance=Xe((Ct=b.serviceCosts[y])!=null?Ct:0,D),I(b.serviceCosts)),a(b.cumulativeCosts)&&(b.cumulativeDuration=fe((It=b.cumulativeCosts[l])!=null?It:0,g),b.cumulativeDistance=Xe((Ft=b.cumulativeCosts[y])!=null?Ft:0,D),I(b.cumulativeCosts)),a(b.violations)&&(b.lateDuration=fe((Bt=b.violations[l])!=null?Bt:0,g),I(b.violations)),a(b.wait)&&(b.waitDuration=fe((jt=b.wait[l])!=null?jt:0,g),I(b.wait))}async function kt(e){const i=ye.WGS84;return await Ii(e.spatialReference,i),Fi(e,i)}function fe(e,i){switch(i){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Xe(e,i){return i==="decimal-degrees"||i==="points"||i==="unknown"?e:Ai(e,i,"meters")}function Tr(e){const{attributes:i,geometry:o,popupTemplate:s,symbol:n}=e.toGraphic().toJSON();return{attributes:i,geometry:o,popupInfo:s,symbol:n}}const gr=K.ofType(Fe),Sr=K.ofType(Be),Jt=K.ofType(Te),Ut=K.ofType(ge),$t=K.ofType(Se),_t=K.ofType(we),ei="esri.layers.RouteLayer",ti=li.getLogger(ei);let O=class extends pi(ui(di(mi(ci(yi(Di)))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new zt,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Jt,this.polygonBarriers=new Ut,this.polylineBarriers=new $t,this.routeInfo=null,this.spatialReference=ye.WGS84,this.stops=new _t,this.type="route";const i=()=>{this._setStopSymbol(this.stops)};this.addHandles(bi(()=>this.stops,"change",i,{sync:!0,onListenerAdd:i}))}writeFeatureCollectionWebmap(e,i,o,s){const n=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(y=>!!y),u=n.map((y,h)=>h),l=s.origin==="web-map"?"featureCollection.layers":"layers";hi(l,n,i),i.opacity=this.opacity,i.visibility=this.visible,i.visibleLayers=u}readDirectionLines(e,i){return this._getNetworkFeatures(i,"DirectionLines",o=>Fe.fromGraphic(o))}readDirectionPoints(e,i){return this._getNetworkFeatures(i,"DirectionPoints",o=>Be.fromGraphic(o))}get fullExtent(){var n;const e=new Vt({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:ye.WGS84});if(a(this.routeInfo)&&a(this.routeInfo.geometry))return(n=this.routeInfo.geometry.extent)!=null?n:e;if(B(this.stops))return e;const i=this.stops.filter(u=>a(u.geometry));if(i.length<2)return e;const{spatialReference:o}=i.getItemAt(0).geometry;if(B(o))return e;const s=i.toArray().map(u=>{const l=u.geometry;return[l.x,l.y]});return new fi({points:s,spatialReference:o}).extent}readMaxScale(e,i){var o,s;return(s=(o=(Ue(i)?i.layers:i.featureCollection.layers).find(n=>a(n.layerDefinition.maxScale)))==null?void 0:o.layerDefinition.maxScale)!=null?s:0}readMinScale(e,i){var o,s;return(s=(o=(Ue(i)?i.layers:i.featureCollection.layers).find(n=>a(n.layerDefinition.minScale)))==null?void 0:o.layerDefinition.minScale)!=null?s:0}readPointBarriers(e,i){return this._getNetworkFeatures(i,"Barriers",o=>Te.fromGraphic(o))}readPolygonBarriers(e,i){return this._getNetworkFeatures(i,"PolygonBarriers",o=>ge.fromGraphic(o))}readPolylineBarriers(e,i){return this._getNetworkFeatures(i,"PolylineBarriers",o=>Se.fromGraphic(o))}readRouteInfo(e,i){const o=this._getNetworkFeatures(i,"RouteInfo",s=>ke.fromGraphic(s));return o.length>0?o.getItemAt(0):null}readSpatialReference(e,i){var u,l;const o=Ue(i)?i.layers:i.featureCollection.layers;if(!o.length)return ye.WGS84;const{layerDefinition:s}=o[0],n=(l=(u=s.spatialReference)!=null?u:s.extent.spatialReference)!=null?l:vi;return ye.fromJSON(n)}readStops(e,i){return this._getNetworkFeatures(i,"Stops",o=>we.fromGraphic(o),o=>this._setStopSymbol(o))}get title(){return a(this.routeInfo)&&a(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return Et.routeServiceUrl}set url(e){e!=null?this._set("url",Ti(e,ti)):this._set("url",Et.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){a(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),a(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),a(this.routeInfo)&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:i}=this;if(!i)throw new ie("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!i.id)throw new ie("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(i.type!=="Feature Collection")throw new ie("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(B(this.routeInfo))throw new ie("routelayer:route-unsolved","save() requires a solved route");const{portal:o}=i;await o._signIn(),o.user||await i.reload();const{itemUrl:s,itemControl:n}=i;if(n!=="admin"&&n!=="update")throw new ie("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const u={messages:[],origin:"portal-item",portal:o,url:s&&gi(s),writtenProperties:[]},l=this.write(null,u);return i.extent=await kt(e),i.title=this.title,await i.update({data:l}),i}async saveAs(e,i={}){var y,h,S;if(await this.load(),B(this.routeInfo))throw new ie("routelayer:route-unsolved","saveAs() requires a solved route");const o=Si.from(e).clone();(y=o.extent)!=null||(o.extent=await kt(this.fullExtent)),o.id=null,(h=o.portal)!=null||(o.portal=wi.getDefault()),(S=o.title)!=null||(o.title=this.title),o.type="Feature Collection",o.typeKeywords=["Data","Feature Collection",Bi.MULTI_LAYER,"Route Layer"];const{portal:s}=o,n={messages:[],origin:"portal-item",portal:s,url:null,writtenProperties:[]};await s._signIn();const u=i==null?void 0:i.folder,l=this.write(null,n);return await s.user.addItem({item:o,folder:u,data:l}),this.portalItem=o,Ci(n),n.portalItem=o,o}async solve(e,i){var A,v,C,w,j;const o=(A=e==null?void 0:e.stops)!=null?A:this.stops,s=(v=e==null?void 0:e.pointBarriers)!=null?v:Ye(this.pointBarriers),n=(C=e==null?void 0:e.polylineBarriers)!=null?C:Ye(this.polylineBarriers),u=(w=e==null?void 0:e.polygonBarriers)!=null?w:Ye(this.polygonBarriers);if(B(o))throw new ie("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((hr(o)||fr(o))&&o.features.length<2||K.isCollection(o)&&o.length<2)throw new ie("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(K.isCollection(o))for(const P of o)P.routeName=null;const l=e==null?void 0:e.apiKey,y=this.url,h=await this._getServiceDescription(y,l,i),S=Qt(h),p=(j=e==null?void 0:e.travelMode)!=null?j:S,g=Mt(e==null?void 0:e.accumulateAttributes,[]);a(p)&&(g.push(p.distanceAttributeName),p.timeAttributeName&&g.push(p.timeAttributeName));const D={startTime:new Date},f={accumulateAttributes:g,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:s,polylineBarriers:n,polygonBarriers:u,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!s,returnDirections:!0,returnPolygonBarriers:!!u,returnPolylineBarriers:!!n,returnRoutes:!0,returnStops:!0,stops:o},d=e?Rt.from(e):new Rt;for(const P in D)d[P]==null&&(d[P]=D[P]);let F;d.set(f);try{F=await sr(y,d,i)}catch(P){throw Ni(P)?P:new ie("routelayer:failed-route-request","the routing request failed",{error:P})}const I=this._toRouteLayerSolution(F);return this._isOverridden("title")||(this.title=Mt(I.routeInfo.name,"Route")),vr(I,h,d),I}update(e){const{stops:i,directionLines:o,directionPoints:s,pointBarriers:n,polylineBarriers:u,polygonBarriers:l,routeInfo:y}=e;this.set({stops:i,pointBarriers:n,polylineBarriers:u,polygonBarriers:l}),this._set("directionLines",o),this._set("directionPoints",s),this._set("routeInfo",y)}_getNetworkFeatures(e,i,o,s){const n=(Ue(e)?e.layers:e.featureCollection.layers).find(D=>D.layerDefinition.name===i);if(B(n))return new K;const{layerDefinition:u,popupInfo:l,featureSet:y}=n,h=u.drawingInfo.renderer,{features:S}=y,p=h&&Oi(h),g=S.map(D=>{var F,I,A;const f=Y.fromJSON(D),d=o(f);return(I=d.symbol)!=null||(d.symbol=(F=p==null?void 0:p.getSymbol(f))!=null?F:this._getNetworkSymbol(i)),(A=d.popupTemplate)!=null||(d.popupTemplate=l&&he.fromJSON(l)),d});return s&&g.some(D=>!D.symbol)&&s(g),new K(g)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,i,o){if(a(this._cachedServiceDescription)&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const s=await Ht(e,i,o);return this._cachedServiceDescription={serviceDescription:s,url:e},s}_setStopSymbol(e){if(!e||e.length===0||B(this.defaultSymbols.stops)||e.every(p=>a(p.symbol)))return;const{first:i,last:o,middle:s,unlocated:n,waypoint:u,break:l}=this.defaultSymbols.stops;if(B(this.routeInfo)||e.length===1)return void e.forEach((p,g)=>{switch(g){case 0:p.symbol=i;break;case e.length-1:p.symbol=o;break;default:p.symbol=s}});const y=e.map(p=>p.sequence).filter(p=>a(p)),h=Math.min(...y),S=Math.max(...y);for(const p of e)p.sequence!==h?p.sequence!==S?p.status==="ok"||p.status==="not-located-on-closest"?p.locationType!=="waypoint"?p.locationType!=="break"?p.symbol=s:p.symbol=l:p.symbol=u:p.symbol=n:p.symbol=o:p.symbol=i}_toRouteLayerSolution(e){var h,S,p,g,D;const i=e.routeResults[0].stops.map(f=>we.fromJSON(f.toJSON()));this._setStopSymbol(i);const o=new _t(i),s=new Ut((h=e.polygonBarriers)==null?void 0:h.map(f=>{const d=ge.fromJSON(f.toJSON());return d.symbol=this.defaultSymbols.polygonBarriers,d})),n=new $t((S=e.polylineBarriers)==null?void 0:S.map(f=>{const d=Se.fromJSON(f.toJSON());return d.symbol=this.defaultSymbols.polylineBarriers,d})),u=new Jt((p=e.pointBarriers)==null?void 0:p.map(f=>{const d=Te.fromJSON(f.toJSON());return d.symbol=this.defaultSymbols.pointBarriers,d})),l=ke.fromJSON(e.routeResults[0].route.toJSON());l.symbol=this.defaultSymbols.routeInfo;const y=new Sr((g=e.routeResults[0].directionPoints)==null?void 0:g.features.map(f=>{const d=Be.fromJSON(f.toJSON());return d.symbol=this.defaultSymbols.directionPoints,d}));return{directionLines:new gr((D=e.routeResults[0].directionLines)==null?void 0:D.features.map(f=>{const d=Fe.fromJSON(f.toJSON());return d.symbol=this.defaultSymbols.directionLines,d})),directionPoints:y,pointBarriers:u,polygonBarriers:s,polylineBarriers:n,routeInfo:l,stops:o}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",Fe.fields,Fe.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",Be.fields,Be.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,i,o,s,n,u,l){return B(e)||!e.length?null:{featureSet:{features:e.toArray().map(y=>Tr(y)),geometryType:o},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:a(i)?i.toJSON():pt(o)}},extent:this.fullExtent.toJSON(),fields:s,geometryType:o,hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,name:u,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),title:l,type:"Feature Layer",typeIdField:""},popupInfo:n}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",Te.fields,Te.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",ge.fields,ge.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",Se.fields,Se.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(a(this.routeInfo)?new K([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",ke.fields,ke.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",we.fields,we.popupInfo,"Stops","Stops");if(B(e))return null;const{stops:i}=this.defaultSymbols,o=a(i)&&a(i.first)&&i.first.toJSON(),s=a(i)&&a(i.middle)&&i.middle.toJSON(),n=a(i)&&a(i.last)&&i.last.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:s,uniqueValueInfos:[{value:"1",symbol:o,label:"First Stop"},{value:`${this.stops.length}`,symbol:n,label:"Last Stop"}]},e}};t([r({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],O.prototype,"_featureCollection",void 0),t([z(["web-map","portal-item"],"_featureCollection")],O.prototype,"writeFeatureCollectionWebmap",null),t([r({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],O.prototype,"_type",void 0),t([r({nonNullable:!0,type:zt})],O.prototype,"defaultSymbols",void 0),t([r({readOnly:!0})],O.prototype,"directionLines",void 0),t([T(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],O.prototype,"readDirectionLines",null),t([r({readOnly:!0})],O.prototype,"directionPoints",void 0),t([T(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],O.prototype,"readDirectionPoints",null),t([r({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],O.prototype,"featureCollectionType",void 0),t([r({readOnly:!0})],O.prototype,"fullExtent",null),t([r({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],O.prototype,"legendEnabled",void 0),t([r({type:["show","hide"]})],O.prototype,"listMode",void 0),t([r({type:Number,nonNullable:!0,json:{write:!1}})],O.prototype,"maxScale",void 0),t([T(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],O.prototype,"readMaxScale",null),t([r({type:Number,nonNullable:!0,json:{write:!1}})],O.prototype,"minScale",void 0),t([T(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],O.prototype,"readMinScale",null),t([r({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],O.prototype,"operationalLayerType",void 0),t([r({nonNullable:!0,type:K.ofType(Te)})],O.prototype,"pointBarriers",void 0),t([T(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],O.prototype,"readPointBarriers",null),t([r({nonNullable:!0,type:K.ofType(ge)})],O.prototype,"polygonBarriers",void 0),t([T(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],O.prototype,"readPolygonBarriers",null),t([r({nonNullable:!0,type:K.ofType(Se)})],O.prototype,"polylineBarriers",void 0),t([T(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],O.prototype,"readPolylineBarriers",null),t([r({readOnly:!0})],O.prototype,"routeInfo",void 0),t([T(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],O.prototype,"readRouteInfo",null),t([r({type:ye})],O.prototype,"spatialReference",void 0),t([T(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],O.prototype,"readSpatialReference",null),t([r({nonNullable:!0,type:K.ofType(we)})],O.prototype,"stops",void 0),t([T(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],O.prototype,"readStops",null),t([r()],O.prototype,"title",null),t([r({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),t([r()],O.prototype,"url",null),O=t([E(ei)],O);const Fr=O;export{Fr as default};
