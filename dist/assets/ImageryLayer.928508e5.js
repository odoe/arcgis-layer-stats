import{y as M,fe as nt,t as E,e2 as Ne,F as n,H as l,by as O,$ as ne,bI as at,ak as Z,I as A,Z as q,bm as _,k as ie,C as Qe,r as S,L as N,A as he,ff as Ue,b as Ge,U as _e,v as Ce,al as ot,b8 as Y,f9 as lt,bA as ut,ca as pt,a as ct,f as Je,s as J,es as ee,ah as mt,w as Re,l as dt,aM as Ee,g as ht,fg as yt,fh as gt,ew as ft,f2 as Rt,eA as bt,ex as vt,bt as wt,bu as St,f0 as xt,bs as It,bv as Ft,bx as Tt,eE as Dt,fi as Pt,eW as Nt,eH as _t,eI as Ct,bB as Ot}from"./index.a113d2e4.js";import{w as x,p as Be,o as K,i as pe,l as Vt,a as jt,b as Mt,u as At,c as be,m as $t,V as Jt,B as Et,k as Lt,t as zt,f as qt,d as Ht,n as kt}from"./fetchRasterInfo.8318ad53.js";import{_ as We,j as Ze,n as Qt,k as Ut,R as Gt,q as Bt,u as Ke,g as ve,f as Wt,T as Zt,P as Le,O as Kt,r as Xt}from"./dataUtils.9cbf27ac.js";import{L as Oe}from"./normalizeUtils.0f2a534b.js";import{n as X,o as ae,e as oe}from"./utils.e087d690.js";import{b as Yt,s as ei,n as ti}from"./executeForIds.8ff44699.js";import"./featureConversionUtils.14a166d5.js";import"./pbf.f9a21435.js";import"./ItemCache.cebc0123.js";import"./ClassBreaksDefinition.c5ebe0f7.js";import"./colorUtils.bb6424b7.js";import"./query.68948bee.js";import"./pbfQueryUtils.49c3d5e8.js";import"./OptimizedGeometry.fcc3a6dc.js";import"./OptimizedFeatureSet.0c30c73c.js";const ii={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},ri={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},si={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ni=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Xe(r){return ni.has(r.type)}function ze(r,i){if(!r||!i)return M(r||i);const e=M(r);if(i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),Ye(e.rasterFunctionDefinition.arguments,i)}else i.functionName.toLowerCase()!=="none"&&(et(e.functionArguments).Raster=i);return e}function Ye(r,i){for(const e in r)e.toLowerCase()==="raster"&&(r[e].type==="RasterFunctionVariable"?(r[e]=i.rasterFunctionDefinition,r[e].type="RasterFunctionTemplate"):r[e].type==="RasterFunctionTemplate"&&Ye(r[e].arguments,i))}function U(r){const i=M(ii[r.functionName+"Function"]),e=r.functionArguments;for(const t in e)t.toLowerCase()==="raster"?(i.arguments[t]=U(e[t]),i.arguments[t].type="RasterFunctionTemplate"):t.toLowerCase()==="colormap"?(i.arguments[t].value=hi(e[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=e[t];return i}function ai(r,i){switch(i=i||{},r.type){case"raster-stretch":return ui(r,i);case"class-breaks":return pi(r,i);case"unique-value":return ci(r,i);case"raster-colormap":return mi(r,i);case"vector-field":return oi(r,i);case"raster-shaded-relief":return li(r,i);case"flow":throw new Error("Unsupported rendering rule.")}}function et(r){const i=r==null?void 0:r.Raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?et(i.functionArguments):r}const ue={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function oi(r,i){const e=new x;e.functionName="VectorFieldRenderer";const{dataType:t,bandProperties:s}=i,a=t==="vector-uv";let o,u;s&&s.length===2&&(o=s.map(R=>R.BandName.toLowerCase()).indexOf("magnitude"),u=s.map(R=>R.BandName.toLowerCase()).indexOf("direction")),o!==-1&&o!==null||(o=0,u=1);const c=r.rotationType==="arithmetic"?1:2,m=r.flowRepresentation==="flow-from"?0:1,p=r.visualVariables?r.visualVariables.find(R=>R.field==="Magnitude"):new nt,h={magnitudeBandID:o,directionBandID:u,isUVComponents:a,referenceSystem:c,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:si[r.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return e.functionArguments=h,i.convertToRFT?new x({rasterFunctionDefinition:U(e)}):e}function li(r,i){const e=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new x;const t=new x;t.functionName="Hillshade";const s=r.hillshadeType==="traditional"?0:1,a=r.scalingType==="none"?1:3,o={HillshadeType:s,SlopeType:a,ZFactor:r.zFactor};return s===0&&(o.Azimuth=r.azimuth,o.Altitude=r.altitude),a===3&&(o.PSPower=r.pixelSizePower,o.PSZFactor=r.pixelSizeFactor),t.functionArguments=o,t.variableName="Raster",r.colorRamp&&(t.functionName="ShadedRelief",e?o.ColorRamp=We(r.colorRamp):o.Colormap=Ze(r.colorRamp,256)),e?new x({rasterFunctionDefinition:U(t)}):t}function ui(r,i){var u;const e=i.convertToRFT,t=new x;t.functionName="Stretch";const s=ue[Qt.toJSON(r.stretchType)],a="u8",o={StretchType:s,Statistics:di(r.statistics),DRA:r.dynamicRangeAdjustment,UseGamma:r.useGamma,Gamma:r.gamma,ComputeGamma:r.computeGamma};if(r.outputMin!=null&&(o.Min=r.outputMin),r.outputMax!=null&&(o.Max=r.outputMax),s===ue.standardDeviation?(o.NumberOfStandardDeviations=r.numberOfStandardDeviations,t.outputPixelType=a):s===ue.percentClip?(o.MinPercent=r.minPercent,o.MaxPercent=r.maxPercent,t.outputPixelType=a):s===ue.minMax?t.outputPixelType=a:s===ue.sigmoid&&(o.SigmoidStrengthLevel=r.sigmoidStrengthLevel),t.functionArguments=o,t.variableName="Raster",r.colorRamp){const c=r.colorRamp,m=new x;if(e)m.functionArguments={ColorRamp:We(c)};else{const p=Ut(c);if(p)m.functionArguments={colorRamp:p};else if(!i.convertColorRampToColormap||c.type!=="algorithmic"&&c.type!=="multipart"){const h=r.colorRamp.toJSON();h.type==="algorithmic"?h.algorithm=h.algorithm||"esriCIELabAlgorithm":h.type==="multipart"&&((u=h.colorRamps)==null?void 0:u.length)&&h.colorRamps.forEach(R=>R.algorithm=R.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:h}}else m.functionArguments={Colormap:Ze(c,256)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=t,e?new x({rasterFunctionDefinition:U(m)}):m}return e?new x({rasterFunctionDefinition:U(t)}):t}function pi(r,i){const e=[],t=[],s=[],a=[],{pixelType:u,rasterAttributeTable:c}=i,m=E(c)?null:c.features,p=tt(c);if(m&&Array.isArray(m)&&r.classBreakInfos){r.classBreakInfos.forEach((y,b)=>{const I=y.symbol.color;let P;I.a&&m.forEach(F=>{P=F.attributes[r.field],(P>=y.minValue&&P<y.maxValue||b===r.classBreakInfos.length-1&&P>=y.minValue)&&a.push([F.attributes[p],I.r,I.g,I.b])})});const f=u?fe(a,u):a,d=new x;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=f,d.variableName="Raster",i.convertToRFT?new x({rasterFunctionDefinition:U(d)}):d}r.classBreakInfos.forEach((f,d)=>{const y=f.symbol&&f.symbol.color;y.a?(d===0?e.push(f.minValue,f.maxValue+1e-6):e.push(f.minValue+1e-6,f.maxValue+1e-6),t.push(d),a.push([d,y.r,y.g,y.b])):s.push(f.minValue,f.maxValue)});const h=u?fe(a,u):a,R=new x;R.functionName="Remap",R.functionArguments={InputRanges:e,OutputValues:t,NoDataRanges:s},R.variableName="Raster";const g=new x;return g.functionName="Colormap",g.functionArguments={Colormap:h,Raster:R},i.convertToRFT?new x({rasterFunctionDefinition:U(g)}):g}function fe(r,i){const e=ri[String(i).toLowerCase()];return e&&r.push([Math.floor(e[0]-1),0,0,0],[Math.ceil(e[1]+1),0,0,0]),r}function tt(r){if(E(r))return;const{fields:i}=r,e=i&&i.find(t=>t&&t.name&&t.name.toLowerCase()==="value");return e&&e.name}function ci(r,i){var h,R;const e=[],{pixelType:t,rasterAttributeTable:s}=i,a=E(s)?null:s.features,o=tt(s),u=(R=(h=r.defaultSymbol)==null?void 0:h.color)==null?void 0:R.toRgb(),c=r.uniqueValueInfos;if(c)if(a){const g=new Map;c.forEach(d=>{const y=d.value,b=d.symbol.color;y!=null&&b&&b.a&&g.set(String(y),b.toRgb())});const f=r.field;a.forEach(({attributes:d})=>{const y=String(d[f]),b=d[o];if(g.has(y)){const I=g.get(y);e.push([b,...I])}else u&&e.push([b,...u])})}else for(let g=0;g<c.length;g++){const f=c[g],d=f.symbol.color,y=+f.value;if(d!=null&&d.a){if(isNaN(y))return null;e.push([y,d.r,d.g,d.b])}}const m=t&&e.length>0?fe(e,t):e,p=new x;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=m,p.variableName="Raster",i.convertToRFT?new x({rasterFunctionDefinition:U(p)}):p}function mi(r,i){const e=r.extractColormap();if(!e||e.length===0)return;const{pixelType:t}=i,s=t?fe(e,t):e,a=new x;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=s,i.convertToRFT?new x({rasterFunctionDefinition:U(a)}):a}function di(r){const i=[];return r.forEach(e=>{const t=e;if(Array.isArray(t))i.push(t);else{if(t.min==null||t.max==null)return;const s=[t.min,t.max,t.avg||0,t.stddev||0];i.push(s)}}),i}function hi(r){const i=[],e=[];return r.forEach(t=>{i.push(t[0]),e.push(Gt([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:e}}var Se;const ce=Ne()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),xe=Ne()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function yi(r){let i;switch(r?r.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return xe.fromJSON(i)}let C=Se=class extends q{constructor(r){super(r),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(r,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(r,i){return yi(i.mosaicMethod||i.defaultMosaicMethod)}readOperation(r,i){const e=i.mosaicOperation,t=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),s=e||(t?ce.toJSON(t):null);return ce.fromJSON(s)||"first"}castSortValue(r){return r==null||typeof r=="string"||typeof r=="number"?r:`${r}`}clone(){return new Se({ascending:this.ascending,itemRenderingRule:M(this.itemRenderingRule),lockRasterIds:M(this.lockRasterIds),method:this.method,multidimensionalDefinition:M(this.multidimensionalDefinition),objectIds:M(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:M(this.viewpoint),where:this.where})}};n([l({type:Boolean,json:{write:!0}})],C.prototype,"ascending",void 0),n([O("ascending",["ascending","sortAscending"])],C.prototype,"readAscending",null),n([l({type:x,json:{write:!0}})],C.prototype,"itemRenderingRule",void 0),n([l({type:[ne],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],C.prototype,"lockRasterIds",void 0),n([l({type:String,json:{type:xe.jsonValues,write:{target:"mosaicMethod",writer:xe.write}}})],C.prototype,"method",void 0),n([O("method",["mosaicMethod","defaultMosaicMethod"])],C.prototype,"readMethod",null),n([l({type:[Be],json:{write:!0}})],C.prototype,"multidimensionalDefinition",void 0),n([l({type:[ne],json:{name:"fids",write:!0}})],C.prototype,"objectIds",void 0),n([l({json:{type:ce.jsonValues,read:{reader:ce.read},write:{target:"mosaicOperation",writer:ce.write}}})],C.prototype,"operation",void 0),n([O("operation",["mosaicOperation","mosaicOperator"])],C.prototype,"readOperation",null),n([l({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],C.prototype,"sortField",void 0),n([l({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],C.prototype,"sortValue",void 0),n([at("sortValue")],C.prototype,"castSortValue",null),n([l({type:Z,json:{write:!0}})],C.prototype,"viewpoint",void 0),n([l({type:String,json:{write:!0}})],C.prototype,"where",void 0),C=Se=n([A("esri.layers.support.MosaicRule")],C);const z=C;let T=class extends q{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(r,i,e){this.layer.version<10.3||(i[e]=r)}get bandIds(){return this.layer.bandIds}set bandIds(r){this.layer&&(this.layer.bandIds=r)}get compressionQuality(){var r;return(r=this.layer)==null?void 0:r.compressionQuality}set compressionQuality(r){this.layer&&(this.layer.compressionQuality=r)}writeCompressionQuality(r,i,e){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(i[e]=r)}get compressionTolerance(){var r;return(r=this.layer)==null?void 0:r.compressionTolerance}set compressionTolerance(r){this.layer&&(this.layer.compressionTolerance=r)}writeCompressionTolerance(r,i,e){this.format==="lerc"&&r!=null&&(i[e]=r)}get format(){var r;return((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){var r;return(r=this.layer)==null?void 0:r.interpolation}set interpolation(r){this.layer&&(this.layer.interpolation=r)}get noData(){var r;return(r=this.layer)==null?void 0:r.noData}set noData(r){this.layer&&(this.layer.noData=r)}get noDataInterpretation(){var r;return(r=this.layer)==null?void 0:r.noDataInterpretation}set noDataInterpretation(r){this.layer&&(this.layer.noDataInterpretation=r)}writeLercVersion(r,i,e){this.format==="lerc"&&this.layer.version>=10.5&&(i[e]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("renderingRule"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("renderer"),r.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let i=r.mosaicRule;const e=r.definitionExpression;return i?e&&e!==i.where&&(i=i.clone(),i.where=e):e&&(i=new z({where:e})),i}get renderingRule(){var s;const r=this.layer;let i=r.renderingRule;const e=r.pixelFilter,t=!r.format||r.format.includes("jpg")||r.format.includes("png");return i=this._addResampleRasterFunction(i),t&&!e&&((s=r.renderer)==null?void 0:s.type)!=="vector-field"&&(i=this.combineRendererWithRenderingRule()),i}combineRendererWithRenderingRule(){var s;const r=this.layer,{rasterInfo:i,renderingRule:e,renderer:t}=r;return!t||!Xe(t)?e:ze(ai(t,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandProperties:(s=i.keyProperties)==null?void 0:s.BandProperties,convertColorRampToColormap:r.version<10.6,convertToRFT:!!(e!=null&&e.rasterFunctionDefinition),bandCount:i.bandCount}),e)}_addResampleRasterFunction(r){var s;if(((s=this.layer.renderer)==null?void 0:s.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new x({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:e}});return t=r!=null&&r.rasterFunctionDefinition?new x({rasterFunctionDefinition:U(t)}):t,ze(t,r)}};n([l()],T.prototype,"layer",void 0),n([l({json:{write:!0}})],T.prototype,"adjustAspectRatio",void 0),n([_("adjustAspectRatio")],T.prototype,"writeAdjustAspectRatio",null),n([l({json:{write:!0}})],T.prototype,"bandIds",null),n([l({json:{write:!0}})],T.prototype,"compression",void 0),n([l({json:{write:!0}})],T.prototype,"compressionQuality",null),n([_("compressionQuality")],T.prototype,"writeCompressionQuality",null),n([l({json:{write:!0}})],T.prototype,"compressionTolerance",null),n([_("compressionTolerance")],T.prototype,"writeCompressionTolerance",null),n([l({json:{write:!0}})],T.prototype,"format",null),n([l({type:String,json:{read:{reader:K.read},write:{writer:K.write}}})],T.prototype,"interpolation",null),n([l({json:{write:!0}})],T.prototype,"noData",null),n([l({type:String,json:{read:{reader:pe.read},write:{writer:pe.write}}})],T.prototype,"noDataInterpretation",null),n([l({json:{write:!0}})],T.prototype,"pixelType",void 0),n([l({json:{write:!0}})],T.prototype,"lercVersion",void 0),n([_("lercVersion")],T.prototype,"writeLercVersion",null),n([l({type:Number})],T.prototype,"version",null),n([l({json:{write:!0}})],T.prototype,"mosaicRule",null),n([l({json:{write:!0}})],T.prototype,"renderingRule",null),T=n([A("esri.layers.mixins.ExportImageServiceParameters")],T);let re=class extends q{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};n([l({type:Number,json:{write:!0}})],re.prototype,"north",void 0),n([l({type:Number,json:{write:!0}})],re.prototype,"up",void 0),n([l({type:ie,json:{write:!0}})],re.prototype,"spatialReference",void 0),re=n([A("esri.rest.support.ImageAngleResult")],re);const gi=re;let H=class extends q{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};n([l({json:{write:!0}})],H.prototype,"catalogItemVisibilities",void 0),n([l({type:Qe,json:{write:!0}})],H.prototype,"catalogItems",void 0),n([l({type:Z,json:{write:!0}})],H.prototype,"location",void 0),n([l({json:{write:!0}})],H.prototype,"name",void 0),n([l({json:{write:!0}})],H.prototype,"objectId",void 0),n([l({json:{write:!0}})],H.prototype,"processedValues",void 0),n([l({json:{write:!0}})],H.prototype,"properties",void 0),n([l({json:{write:!0}})],H.prototype,"value",void 0),H=n([A("esri.rest.support.ImageIdentifyResult")],H);const fi=H;let ye=class extends q{constructor(){super(...arguments),this.geometries=null}};n([l({json:{write:!0}})],ye.prototype,"geometries",void 0),ye=n([A("esri.rest.support.ImagePixelLocationResult")],ye);const Ri=ye;let W=class extends q{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};n([l({json:{write:!0}})],W.prototype,"attributes",void 0),n([l({type:Z,json:{write:!0}})],W.prototype,"location",void 0),n([l({json:{write:!0}})],W.prototype,"locationId",void 0),n([l({json:{write:!0}})],W.prototype,"rasterId",void 0),n([l({json:{write:!0}})],W.prototype,"resolution",void 0),n([l({json:{write:!0}})],W.prototype,"pixelValue",void 0),W=n([A("esri.rest.support.ImageSample")],W);const bi=W;let ge=class extends q{constructor(){super(...arguments),this.samples=null}};n([l({type:[bi],json:{write:!0}})],ge.prototype,"samples",void 0),ge=n([A("esri.rest.support.ImageSampleResult")],ge);const vi=ge;function it(r){const i=r==null?void 0:r.time;if(i&&(i.start!=null||i.end!=null)){const e=[];i.start!=null&&e.push(i.start),i.end==null||e.includes(i.end)||e.push(i.end),r.time=e.join(",")}}async function rt(r,i,e){const t=X(r),s=i.geometry?[i.geometry]:[],a=await Oe(s),o=i.toJSON();it(o);const u=a&&a[0];S(u)&&(o.geometry=u.toJSON());const c=ae({...t.query,f:"json",...o});return oe(c,e)}async function wi(r,i,e){var c;const t=i.toJSON();S(t.angleName)&&(t.angleName=t.angleName.join(",")),S(i.point)&&((c=i.point.spatialReference)==null?void 0:c.imageCoordinateSystem)&&(t.point.spatialReference=Ve(i.point.spatialReference)),S(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(t.spatialReference=st(i.spatialReference));const s=X(r),a=ae({...s.query,f:"json",...t}),o=oe(a,e),{data:u}=await N(`${s.path}/computeAngles`,o);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new ie({wkid:0,imageCoordinateSystem:u.spatialReference}):ie.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new gi(u)}async function Si(r,i,e){var m;const t=i.toJSON(),{geometries:s}=i;for(let p=0;p<s.length;p++)(m=s[p].spatialReference)!=null&&m.imageCoordinateSystem&&(t.geometries.geometries[p].spatialReference=Ve(s[p].spatialReference));const a=X(r),o=ae({...a.query,f:"json",...t}),u=oe(o,e),{data:c}=await N(`${a.path}/computePixelLocation`,u);return Ri.fromJSON(c)}async function xi(r,i,e){const t=await rt(r,i,e),s=X(r),{data:a}=await N(`${s.path}/computeStatisticsHistograms`,t),{statistics:o}=a;return o!=null&&o.length&&o.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o,histograms:a.histograms}}async function Ii(r,i,e){const t=await rt(r,i,e),s=X(r),{data:a}=await N(`${s.path}/computeHistograms`,t);return{histograms:a.histograms}}async function Fi(r,i,e){var p,h,R;const t=i.toJSON();it(t),(p=t.outFields)!=null&&p.length&&(t.outFields=t.outFields.join(","));const s=(h=await Oe(i.geometry))==null?void 0:h[0];S(s)&&(t.geometry=s.toJSON());const a=X(r),o=ae({...a.query,f:"json",...t}),u=oe(o,e),{data:c}=await N(`${a.path}/getSamples`,u),m=(R=c==null?void 0:c.samples)==null?void 0:R.map(g=>{const f=g.value==="NaN"||g.value===""?null:g.value.split(" ").map(d=>Number(d));return{...g,pixelValue:f}});return vi.fromJSON({samples:m})}async function qe(r,i,e){const t=X(r),s=i.geometry?[i.geometry]:[];return Oe(s).then(a=>{const o=i.toJSON(),u=a&&a[0];S(u)&&(o.geometry=JSON.stringify(u.toJSON()));const c=ae({...t.query,f:"json",...o}),m=oe(c,e);return N(t.path+"/identify",m)}).then(a=>fi.fromJSON(a.data))}function Ve(r){const{imageCoordinateSystem:i}=r;if(i){const{id:e,referenceServiceName:t}=i;return e!=null?t?{icsid:e,icsns:t}:{icsid:e}:{ics:i}}return r.toJSON()}function st(r,i){const e=Ve(r),{icsid:t,icsns:s,wkid:a}=e;return t!=null?s==null||(i==null?void 0:i.toLowerCase().includes("/"+s.toLowerCase()+"/"))?`0:${t}`:JSON.stringify(e):a?a.toString():JSON.stringify(e)}async function Ti(r,i,e){var F,w;const t=X(r),s=ae({...t.query,f:"json"}),a=oe(s,e),o=`${t.path}/${i}/info`,u=N(`${o}`,a),c=N(`${o}/keyProperties`,a),m=await Promise.allSettled([u,c]),p=m[0].status==="fulfilled"?m[0].value.data:null,h=m[1].status==="fulfilled"?m[1].value.data:null;let R=null;(F=p.statistics)!=null&&F.length&&(R=p.statistics.map(V=>({min:V[0],max:V[1],avg:V[2],stddev:V[3]})));const g=he.fromJSON(p.extent),f=Math.ceil(g.width/p.pixelSizeX-.1),d=Math.ceil(g.height/p.pixelSizeY-.1),y=g.spatialReference,b=new Z({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:y}),I=(w=p.histograms)!=null&&w.length?p.histograms:null,P=new Bt({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new Ke({width:f,height:d,bandCount:p.bandCount,extent:g,spatialReference:y,pixelSize:b,pixelType:p.pixelType.toLowerCase(),statistics:R,histograms:I,keyProperties:h,storageInfo:P})}var Ie;let te=Ie=class extends q{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ie(M({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};n([l({type:[String],json:{name:"angleName",write:!0}})],te.prototype,"angleNames",void 0),n([l({type:Z,json:{write:!0}})],te.prototype,"point",void 0),n([l({type:ie,json:{write:!0}})],te.prototype,"spatialReference",void 0),n([l({type:ne,json:{write:!0}})],te.prototype,"rasterId",void 0),te=Ie=n([A("esri.rest.support.ImageAngleParameters")],te);const Di=te;var Fe;let Q=Fe=class extends q{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(r,i,e){r!=null&&(i.geometryType=Ce(r),i[e]=r.toJSON())}clone(){return new Fe(M({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};n([l({types:Ue,json:{read:Ge}})],Q.prototype,"geometry",void 0),n([_("geometry")],Q.prototype,"writeGeometry",null),n([l({type:z,json:{write:!0}})],Q.prototype,"mosaicRule",void 0),n([l({type:x,json:{write:!0}})],Q.prototype,"renderingRule",void 0),n([l({type:Z,json:{write:!0}})],Q.prototype,"pixelSize",void 0),n([l({json:{write:!0}})],Q.prototype,"raster",void 0),n([l({type:_e,json:{read:{source:"time"},write:{target:"time"}}})],Q.prototype,"timeExtent",void 0),Q=Fe=n([A("esri.rest.support.ImageHistogramParameters")],Q);const He=Q;var Te;let D=Te=class extends q{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(r,i,e){r!=null&&(i.geometryType=Ce(r),i[e]=JSON.stringify(r.toJSON()))}set mosaicRule(r){let i=r;i&&i.mosaicMethod&&(i=z.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(r,i,e){r!=null&&(i[e]=JSON.stringify(r.toJSON()))}set renderingRule(r){let i=r;i&&i.rasterFunction&&(i=x.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("renderingRule",i)}writeRenderingRule(r,i,e){r!=null&&(i[e]=JSON.stringify(r.toJSON())),r.rasterFunctionDefinition&&(i[e]=JSON.stringify(r.rasterFunctionDefinition))}writeRenderingRules(r,i,e){r!=null&&(i[e]=JSON.stringify(r.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(r,i,e){r!=null&&(i[e]=JSON.stringify(r))}writeTimeExtent(r,i,e){if(r!=null){const t=S(r.start)?r.start.getTime():null,s=S(r.end)?r.end.getTime():null;i[e]=t!=null?s!=null?`${t},${s}`:`${t}`:null}}clone(){return new Te(M({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};n([l({json:{write:!0}})],D.prototype,"geometry",void 0),n([_("geometry")],D.prototype,"writeGeometry",null),n([l({type:z,json:{write:!0}})],D.prototype,"mosaicRule",null),n([_("mosaicRule")],D.prototype,"writeMosaicRule",null),n([l({type:x,json:{write:!0}})],D.prototype,"renderingRule",null),n([_("renderingRule")],D.prototype,"writeRenderingRule",null),n([l({type:[x],json:{write:!0}})],D.prototype,"renderingRules",void 0),n([_("renderingRules")],D.prototype,"writeRenderingRules",null),n([l({type:Z,json:{write:!0}})],D.prototype,"pixelSize",void 0),n([_("pixelSize")],D.prototype,"writePixelSize",null),n([l({type:Boolean,json:{write:!0}})],D.prototype,"returnGeometry",void 0),n([l({type:Boolean,json:{write:!0}})],D.prototype,"returnCatalogItems",void 0),n([l({type:Boolean,json:{write:!0}})],D.prototype,"returnPixelValues",void 0),n([l({type:Number,json:{write:!0}})],D.prototype,"maxItemCount",void 0),n([l({type:_e,json:{write:{target:"time"}}})],D.prototype,"timeExtent",void 0),n([_("timeExtent")],D.prototype,"writeTimeExtent",null),n([l({json:{write:!0}})],D.prototype,"raster",void 0),n([l({json:{write:!0}})],D.prototype,"viewId",void 0),n([l({type:Boolean,json:{write:!0}})],D.prototype,"processAsMultidimensional",void 0),D=Te=n([A("esri.rest.support.ImageIdentifyParameters")],D);const ke=D;var De;let se=De=class extends q{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,i,e){i.geometries={geometryType:"esriGeometryPoint",geometries:r.map(t=>t.toJSON())}}clone(){return new De({geometries:this.geometries.map(r=>r.clone()),rasterId:this.rasterId})}};n([l({type:[Z],json:{write:!0}})],se.prototype,"geometries",void 0),n([_("geometries")],se.prototype,"writeGeometry",null),n([l({type:ne,json:{write:!0}})],se.prototype,"rasterId",void 0),se=De=n([A("esri.rest.support.ImagePixelLocationParameters")],se);const Pi=se;var Pe;let j=Pe=class extends q{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(r,i,e){r!=null&&(i.geometryType=Ce(r),i[e]=r.toJSON())}set locations(r){if(r!=null&&r.length){const i=new ot({spatialReference:r[0].spatialReference});i.points=r.map(e=>[e.x,e.y]),this._set("locations",r),this.geometry=i}}clone(){return new Pe(M({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};n([l({types:Ue,json:{read:Ge}})],j.prototype,"geometry",void 0),n([_("geometry")],j.prototype,"writeGeometry",null),n([l()],j.prototype,"locations",null),n([l({type:String,json:{type:K.jsonValues,read:K.read,write:K.write}})],j.prototype,"interpolation",void 0),n([l({type:z,json:{write:!0}})],j.prototype,"mosaicRule",void 0),n([l({type:[String],json:{write:!0}})],j.prototype,"outFields",void 0),n([l({type:Z,json:{write:!0}})],j.prototype,"pixelSize",void 0),n([l({type:String,json:{write:!0}})],j.prototype,"raster",void 0),n([l({type:Boolean,json:{write:!0}})],j.prototype,"returnFirstValueOnly",void 0),n([l({type:Number,json:{write:!0}})],j.prototype,"sampleDistance",void 0),n([l({type:Number,json:{write:!0}})],j.prototype,"sampleCount",void 0),n([l({type:Number,json:{write:!0}})],j.prototype,"sliceId",void 0),n([l({type:_e,json:{read:{source:"time"},write:{target:"time"}}})],j.prototype,"timeExtent",void 0),j=Pe=n([A("esri.rest.support.ImageSampleParameters")],j);const Ni=j,we=Ne()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),_i=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ci=yt(gt,{min:0,max:255});function Oi(r){var e;if(!r)return null;const i=(e=JSON.stringify(r).match(/"rasterFunction":"(.*?")/gi))==null?void 0:e.map(t=>t.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}const Vi=r=>{let i=class extends r{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new T({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?z.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||S(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||S(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(s=>typeof s=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,s){e!=null&&this.format!=="lerc"&&(t[s]=e)}writeCompressionTolerance(e,t,s){this.format==="lerc"&&e!=null&&(t[s]=e)}get fieldsIndex(){return this.fields?new pt(this.fields):null}set format(e){e&&_i.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const s=e||t.mosaicRule;return s?z.fromJSON(s):this._isMosaicRuleSupported(t)?z.fromJSON(t):null}writeMosaicRule(e,t,s){let a=this.mosaicRule;const o=this.definitionExpression;a?o&&o!==a.where&&(a=a.clone(),a.where=o):o&&(a=new z({where:o})),this._isValidCustomizedMosaicRule(a)&&(t[s]=a.toJSON())}get multidimensionalInfo(){return S(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,s){e!=null&&typeof e=="number"&&(t[s]=Ci(e))}readObjectIdField(e,t){if(!e){const s=t.fields.filter(a=>a.type==="esriFieldTypeOID"||a.type==="oid");e=s&&s[0]&&s[0].name}return e}get parsedUrl(){return this.url?ct(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,s){var u,c;const a=(c=(u=t==null?void 0:t.layerDefinition)==null?void 0:u.drawingInfo)==null?void 0:c.renderer,o=At(a,s);return o==null?null:(o.type==="vector-field"&&t.symbolTileSize&&!a.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),Xe(o)||Je.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),o)}writeRenderer(e,t,s){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new Y({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new Y({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new Y({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let o=this.fields?M(this.fields):[];o.push(s),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&o.push(t),this.version>=10.4&&S(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&o.push(a),S(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{o.push(new Y({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(o.push(new Y({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),o.push(new Y({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:u}=this.rasterInfo;if(S(u)){const c=u.fields.filter(m=>m.type!=="esriFieldTypeOID"&&m.name.toLowerCase()!=="value").map(m=>{const p=M(m);return p.name=e+m.name,p});o=o.concat(c)}return o}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=x.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const s=t.rasterFunctionInfos;return t.renderingRule||s&&s.length&&s[0].name!=="None"?this._isRFTJson(t.renderingRule)?x.fromJSON({rasterFunctionDefinition:t.renderingRule}):x.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,s){const a=e.toJSON();a.rasterFunctionDefinition?t[s]=a.rasterFunctionDefinition:t[s]=a}readSpatialReference(e,t){const s=e||t.extent.spatialReference;return s?ie.fromJSON(s):null}readPixelType(e){return we.fromJSON(e)||e}writePixelType(e,t,s){(E(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[s]=we.toJSON(e))}readVersion(e,t){let s=t.currentVersion;return s||(s=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),s}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let s=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const a=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),o=this._rasterJobHandler.instance,{bandIds:u}=this;if(o){a&&(this.symbolizer.bind(),await o.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const c=await o.symbolize({bandIds:u,...e},t);s={extent:e.extent,pixelBlock:c}}else s={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:u,...e})}}return s}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new J("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=ee(Di,e).clone(),wi(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new J("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=ee(Pi,e).clone(),Si(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new J("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=ee(He,e).clone();const{raster:s,mosaicRule:a,renderingRule:o}=this;return o&&e.renderingRule==null&&(e.renderingRule=o),a&&e.mosaicRule==null&&(e.mosaicRule=a),s&&e.raster==null&&(e.raster=s),Ii(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new J("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=ee(He,e).clone();const{raster:s,mosaicRule:a,renderingRule:o}=this;return o&&e.renderingRule==null&&(e.renderingRule=o),a&&e.mosaicRule==null&&(e.mosaicRule=a),s&&e.raster==null&&(e.raster=s),xi(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return S(t)?t.get(e):void 0}getFieldDomain(e,t){const s=this.getField(e);return s?s.domain:null}async fetchImage(e,t,s,a={}){var c;if(e==null||t==null||s==null)throw new J("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const m=await this.generateRasterInfo(this.renderingRule,{signal:a.signal});m&&(this.rasterInfo=m)}const o=this.getExportImageServiceParameters(e,t,s,a.timeExtent);if(o==null){if(a.requestAsImageElement&&this._canRequestImageElement(this.format)){const g=document.createElement("canvas");return g.width=t,g.height=s,{imageOrCanvasElement:g}}const m=((c=this.bandIds)==null?void 0:c.length)||this.rasterInfo.bandCount,p=t*s,{pixelType:h}=this.rasterInfo,R=[];for(let g=0;g<m;g++)R.push(ve.createEmptyBand(h,p));return{pixelData:{pixelBlock:new ve({width:t,height:s,pixels:R,mask:new Uint8Array(p),pixelType:h}),extent:e}}}const u={imageServiceParameters:o,imageProps:{extent:e,width:t,height:s,format:this.format},requestAsImageElement:a.requestAsImageElement&&!this.pixelFilter||!1,signal:a.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return N(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new J("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):N(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>Qe.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const s={...t,query:this._getQueryParams()};return Ti(this.parsedUrl.path,e,s)}async getCatalogItemICSInfo(e,t){var Me,Ae,$e;const{data:s}=await N(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),a=s&&s.ics;if(!a)return;let o=null;try{o=(await N(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!o||!o.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const u=this.version>=10.7?N(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(v=>v.data).catch(()=>({})):{},c=o.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[o]}),inSR:c.wkid||JSON.stringify(c),outSR:"0:"+e},p=N(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...t}).then(v=>v.data).catch(()=>({})),h=5,R=(o.xmin+o.xmax)/2,g=(o.ymax-o.ymin)/(h+1),f=o.ymin+g,d=[];for(let v=0;v<h;v++)d.push({x:R,y:f+g*v});const y={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:c.wkid||JSON.stringify(c),outSR:"0:"+e},b=N(this.parsedUrl.path+"/project",{query:this._getQueryParams(y),...t}).then(v=>v.data).catch(()=>({})),I=await Promise.all([u,p,b]);let P=I[0].ipxf;if(P==null){const v=(Me=a.geodataXform)==null?void 0:Me.xf_0;((Ae=v==null?void 0:v.name)==null?void 0:Ae.toLowerCase())==="topup"&&(($e=v==null?void 0:v.coefficients)==null?void 0:$e.length)===6&&(P={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:v.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const F=he.fromJSON(I[1]&&I[1].geometries&&I[1].geometries[0]);F&&(F.spatialReference=new ie({wkid:0,imageCoordinateSystem:a}));const w=I[2].geometries?I[2].geometries.filter(v=>v!=null&&v.x!=null&&v.y!=null&&v.x!=="NaN"&&v.y!=="NaN"):[],V=w.length;if(V<3)return{ics:a,icsToPixelTransform:P,icsExtent:F,northDirection:null};let G=0,le=0,me=0,de=0;for(let v=0;v<V;v++)G+=w[v].x,le+=w[v].y,me+=w[v].x*w[v].x,de+=w[v].x*w[v].y;const $=(V*de-G*le)/(V*me-G*G);let k=0;const B=w[h-1].x>w[0].x,je=w[h-1].y>w[0].y;return $===1/0?k=je?90:270:$===0?k=B?0:180:$>0?k=B?180*Math.atan($)/Math.PI:180*Math.atan($)/Math.PI+180:$<0&&(k=je?180+180*Math.atan($)/Math.PI:360+180*Math.atan($)/Math.PI),{ics:a,icsToPixelTransform:P,icsExtent:F,northDirection:k}}async generateRasterInfo(e,t){var o;if(this.serviceRasterInfo&&(!e||((o=e.functionName)==null?void 0:o.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const s=Oi(e);if(this._functionRasterInfos[s])return this._functionRasterInfos[s];const a=this._generateRasterInfo(e,t);this._functionRasterInfos[s]=a;try{return await a}catch{return this._functionRasterInfos[s]=null,null}}getExportImageServiceParameters(e,t,s,a){var d;e=e.clone().shiftCentralMeridian();const o=st(e.spatialReference,this.parsedUrl.path);this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const u=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:m}=u;let{renderingRule:p}=u;const h=(d=this.renderingRule)==null?void 0:d.rasterFunctionDefinition,R=!this.renderer||this.renderer.type==="raster-stretch";if((c==null?void 0:c.length)&&this._hasRenderingRule(this.renderingRule)&&!h&&R){const y={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if(p.rasterFunction==="Stretch")y.rasterFunctionArguments.Raster=p.rasterFunctionArguments.Raster,p.rasterFunctionArguments.Raster=y;else if(p.rasterFunction==="Colormap"){const b=p.rasterFunctionArguments.Raster;(b==null?void 0:b.rasterFunction)==="Stretch"?(y.rasterFunctionArguments.Raster=b.rasterFunctionArguments.Raster,b.rasterFunctionArguments.Raster=y):(y.rasterFunctionArguments.Raster=b,p.rasterFunctionArguments.Raster=y)}else y.rasterFunctionArguments.Raster=p,p=y;u.bandIds=void 0}else u.bandIds=c==null?void 0:c.join(",");m instanceof Array&&m.length>0&&(u.noData=m.join(","));const g=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,a):null;if(u.mosaicRule=S(g)?JSON.stringify(g):null,this.multidimensionalSubset&&S(g)&&g.multidimensionalDefinition&&be(g.multidimensionalDefinition,this.multidimensionalSubset))return null;u.renderingRule=this._getRenderingRuleString(x.fromJSON(p));const f={};if(a){const{start:y,end:b}=a.toJSON();y&&b&&y===b?f.time=""+y:y==null&&b==null||(f.time=`${y!=null?y:"null"},${b!=null?b:"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:o,imageSR:o,size:t+","+s,...u,...f}}async getSamples(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new J("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=ee(Ni,e).clone();const{raster:s}=this;return s&&e.raster==null&&(e.raster=s),Fi(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new J("imagery-layer:query-rasters","query operation is not supported on the input image service");e=ee(ke,e).clone();const{raster:s,mosaicRule:a,renderingRule:o}=this;if(o&&e.renderingRule==null&&(e.renderingRule=o),a&&e.mosaicRule==null){const u=this._combineMosaicRuleWithTimeExtent(a,e.timeExtent);e.mosaicRule=mt(u)}return s&&e.raster==null&&(e.raster=s),qe(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Re;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Yt(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),ei(this.url,e,t)}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),ti(this.url,e,t)}async queryVisibleRasters(e,t){var I,P;if(!e)throw new J("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:s,returnDomainValues:a,returnTopmostRaster:o,showNoDataRecords:u}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,m=null,p=null;const h="raster.servicepixelvalue",R=this._rasterFunctionNamesIndex;if(S(e.outFields)&&(c=e.outFields.some(F=>!F.toLowerCase().includes(h)),this.version>=10.4)){const F=e.outFields.filter(w=>w.toLowerCase().includes(h)&&w.length>h.length).map(w=>{const V=w.slice(h.length+1);return[this._updateRenderingRulesFunctionName(V,R),V]});m=F.map(w=>new x({functionName:w[0]})),p=F.map(w=>w[1]),m.length===0?this.renderingRule?(m.push(this.renderingRule),p.push(this.renderingRule.functionName)):m=null:this.renderingRule&&!m.some(w=>w.functionName===this.renderingRule.functionName)&&(m.push(this.renderingRule),p.push(this.renderingRule.functionName))}const g=E(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=e.timeExtent||this.timeExtent,d=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f),y=this._getQueryParams({geometry:e.geometry,timeExtent:f,mosaicRule:d,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:m,pixelSize:s,returnCatalogItems:c,returnGeometry:g,raster:this.raster,maxItemCount:o?1:null});delete y.f;const b=new ke(y);try{await this.generateRasterInfo(this.renderingRule);const F=await qe(this.url,b,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),w=e.outFields,V=F.value.toLowerCase().includes("nodata");if(!(c&&!g&&((I=F==null?void 0:F.catalogItems)==null?void 0:I.features.length)&&(u||!V)))return this._processVisibleRastersResponse(F,{returnDomainValues:a,templateRRFunctionNames:p,showNoDataRecords:u,templateFields:w});const G=this.objectIdField||"ObjectId",le=F.catalogItems.features,me=le.map(k=>{var B;return(B=k.attributes)==null?void 0:B[G]}),de=new Re({objectIds:me,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[G]}),$=await this.queryRasters(de);return(P=$==null?void 0:$.features)!=null&&P.length&&$.features.forEach(k=>{le.forEach(B=>{B.attributes[G]===k.attributes[G]&&(B.geometry=new dt(k.geometry),S(e.outSpatialReference)&&(B.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(F,{returnDomainValues:a,templateRRFunctionNames:p,showNoDataRecords:u,templateFields:w})}catch{throw new J("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const s=N(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(u=>{var c;return(c=u.data)==null?void 0:c.statistics}),a=N(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(u=>{var c;return(c=u.data)==null?void 0:c.histograms}),o=await Promise.all([s,a]);return o[0]&&o[0].forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o[0]||null,histograms:o[1]||null}}async createFlowMesh(e,t){const s=this._rasterJobHandler.instance;return s?s.createFlowMesh(e,t):Wt(e.meshType,e.simulationSettings,e.flowData,S(t.signal)?t.signal:new AbortController().signal)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,s=S(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):$t(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then(u=>(this._set("serviceRasterInfo",u),u)),a=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,o=this._getRasterFunctionInfos();return Promise.all([s,a,o]).then(u=>{u[1]?this._set("rasterInfo",u[1]):this._set("rasterInfo",u[0]),u[2]&&this._set("rasterFunctionInfos",u[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),Je.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([Ee(()=>this.renderingRule,m=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(m).then(p=>{p&&(this.rasterInfo=p)})}),Ee(()=>this.multidimensionalSubset,(m,p)=>{var h;if(this.exportImageServiceParameters&&this.mosaicRule&&((h=this.mosaicRule.multidimensionalDefinition)==null?void 0:h.length)){const{multidimensionalDefinition:R}=this.mosaicRule;S(R)&&be(R,m)!==be(R,p)&&(this.exportImageServiceParameters.version+=1)}})]);const{serviceRasterInfo:c}=this;S(c.multidimensionalInfo)&&this._updateMultidimensionalDefinition(c)})}_combineMosaicRuleWithTimeExtent(e,t){var g;const s=this.timeInfo;if(E(e)||E(this.multidimensionalInfo)||E(t)||E(s==null?void 0:s.startField))return e;const{startField:a}=s,o=this.multidimensionalInfo.variables.some(f=>f.dimensions.some(d=>d.name===a))?a:"StdTime";if(e=e.clone(),this._serviceSourceType==="mosaic-dataset")return e.multidimensionalDefinition=(g=e.multidimensionalDefinition)==null?void 0:g.filter(f=>f.dimensionName!==o),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const u=e.multidimensionalDefinition.filter(f=>f.dimensionName===o),c=S(t.start)?t.start.getTime():null,m=S(t.end)?t.end.getTime():null,p=c==null||m==null||c===m,h=p?[c||m]:[[c,m]],R=this.version>=10.8;if(u.length)u.forEach(f=>{f.dimensionName===o&&(R?(f.dimensionName=null,f.isSlice=null,f.values=null):(f.isSlice=p,f.values=h))});else if(!R){const f=e.multidimensionalDefinition.filter(d=>d.variableName!=null&&d.dimensionName==null);f.length?f.forEach(d=>{d.dimensionName=o,d.isSlice=p,d.values=h}):e.multidimensionalDefinition.push(new Be({variableName:"",dimensionName:o,isSlice:p,values:h}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return E(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this._serviceSourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new J("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=S(e)?ee(Re,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new kt;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:s}=this;return e.type==="unique-value"&&this._hasRenderingRule(s)&&t.bandCount===1&&["u8","s8"].includes(t.pixelType)||Jt(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var s;let t=this.sourceJSON;if(!t){const{data:a,ssl:o}=await N(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});t=a,this.sourceJSON=t,o&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((s=t.capabilities)==null?void 0:s.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly"))>-1)throw new J("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var a;if(!e)return!1;const t=this._isMosaicDataset(e),s=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&((a=e.fields)==null?void 0:a.length)>1);return t||s}_isVectorFieldResampleFunction(e){if(E(e))return!1;const{functionName:t,functionArguments:s}=e,a=(t==null?void 0:t.toLowerCase())==="resample",o=(s==null?void 0:s.ResampleType)||(s==null?void 0:s.resampleType);return a&&(o===7||o===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var t,s;if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const o=Et(this.rasterInfo);!o||this.rasterInfo.bandCount===3&&o[0]===0&&o[1]===1&&o[2]===2||(this.bandIds=o)}e||(e=Lt(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:(s=(t=this.mosaicRule)==null?void 0:t.multidimensionalDefinition)==null?void 0:s[0].variableName}));const a=zt(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new Zt({rendererJSON:a,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:S(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){S(e==null?void 0:e.renderingRule)&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:s}=this;return{raster:t,viewId:s,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,s){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Le(e,t,s)}async _getRasterFunctionInfos(e){var s;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(s=(await N(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:s.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:s,signal:a}=e;if(s&&this._canRequestImageElement(t.format))return{imageOrCanvasElement:(await N(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:a})).data,params:t};const o=this._initJobHandler(),u=N(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:a}),c=(await Promise.all([u,o]))[0].data,m=t.format||"jpgpng";let p=m;if(p!=="bsq"&&p!=="bip"&&(p=Kt(c)),!p)throw new J("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const h={signal:a};return{pixelData:{pixelBlock:await(m==="gif"||m==="bmp"||m.includes("png")&&(p==="png"||p==="jpg")?Le(c,{useCanvas:!0,...t},h):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:m},h)),extent:t.extent},params:t}}_generateRasterInfo(e,t){const s={...t,query:this._getQueryParams()};return qt(this.parsedUrl.path,e,s)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this._defaultServiceMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=Ht(e,{multidimensionalSubset:this.multidimensionalSubset});if(S(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new z;const s=this.mosaicRule.multidimensionalDefinition;(!s||s&&s.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const s=e.value,{templateRRFunctionNames:a,showNoDataRecords:o,returnDomainValues:u,templateFields:c}=t,m=e.processedValues;let p=e.catalogItems&&e.catalogItems.features,h=e.properties&&e.properties.Values&&e.properties.Values.map(I=>I.replace(/ /gi,", "))||[];const R=this.objectIdField||"ObjectId",g=typeof s=="string"&&s.toLowerCase().includes("nodata"),f=[];if(s&&!p&&!g){const I={};I[R]=0,h=[s],p=[new ht(this.fullExtent,null,I)]}if(!p)return[];let d,y,b;this._updateResponseFieldNames(p,c),g&&!o&&(p=[]);for(let I=0;I<p.length;I++){if(d=p[I],s!=null){if(y=h[I],b=this.renderingRule&&m&&m.length>0&&a&&a.length>0&&a.includes(this.renderingRule.functionName)?m[a.indexOf(this.renderingRule.functionName)]:s,y.toLowerCase()==="nodata"&&!o)continue;const P="Raster.ItemPixelValue",F="Raster.ServicePixelValue";d.attributes[P]=y,d.attributes[F]=b,this._updateFeatureWithMagDirValues(d,y);const w=this.fields&&this.fields.length>0;let V=this.renderingRule&&S(this.serviceRasterInfo.attributeTable)?w?y:s:b;this.renderingRule||(V=w?y:s),this._updateFeatureWithRasterAttributeTableValues(d,V)}if(d.sourceLayer=d.layer=this,u&&this._updateFeatureWithDomainValues(d),a&&m&&a.length===m.length)for(let P=0;P<a.length;P++){const F="Raster.ServicePixelValue."+a[P];d.attributes[F]=m[P]}f.push(p[I])}return f}_updateFeatureWithRasterAttributeTableValues(e,t){const s=this.rasterInfo&&this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(E(s))return;const{features:a,fields:o}=s,u=o.map(p=>p.name).filter(p=>p.toLowerCase()==="value"),c=u&&u[0];if(!c)return;const m=a.filter(p=>p.attributes[c]===(t!=null?parseInt(t,10):null));m&&m[0]&&o.forEach(p=>{const h=this._rasterAttributeTableFieldPrefix+p.name;e.attributes[h]=m[0].attributes[p.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const s=t.split(/,\s*/).map(m=>parseFloat(m)),a=s.map(m=>[m]),o=s.map(m=>({minValue:m,maxValue:m,noDataValue:null})),u=new ve({height:1,width:1,pixelType:"f32",pixels:a,statistics:o});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:u,extent:new he(0,0,0,0,this.spatialReference)});const c=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[u.pixels[0][0],u.pixels[1][0]]:Xt([u.pixels[0][0],u.pixels[1][0]]);e.attributes["Raster.Magnitude"]=c[0],e.attributes["Raster.Direction"]=c[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(s=>s.domain&&s.domain.type==="coded-value");t!=null&&t.forEach(s=>{const a=e.attributes[s.name];if(a!=null){const o=s.domain.codedValues.find(u=>u.code===a);o&&(e.attributes[s.name]=o.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const s=this.fieldsIndex;E(s)||e.forEach(a=>{if(a&&a.attributes){for(const o of t)if(s.has(o)){const u=s.get(o).name;u!==o&&(a.attributes[o]=a.attributes[u],delete a.attributes[u])}}})}_getRenderingRuleString(e){var t;if(this._hasRenderingRule(e)){let s=e.toJSON();return s=(t=s.rasterFunctionDefinition)!=null?t:s,(s.thumbnail||s.thumbnailEx)&&(s.thumbnail=s.thumbnailEx=null),JSON.stringify(s)}return null}_hasRenderingRule(e){return e&&e.functionName&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const s=e.toLowerCase().replace(/ /gi,"_");return t.has(s)?t.get(s):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(h=>h.trim()):["image","catalog"],{currentVersion:s,advancedQueryCapabilities:a,maxRecordCount:o}=e,u=t.includes("image"),c=e.serviceDataType==="esriImageServiceDataTypeElevation",m=!!(e.spatialReference||e.extent&&e.extent.spatialReference),p=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsMeasure:t.includes("mensuration")&&m,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:s>=10.2&&u,supportsProject:s>=10.3&&u,supportsComputeStatisticsHistograms:s>=10.4&&u,supportsQueryBoundary:s>=10.6&&u,supportsCalculateVolume:s>=10.7&&c,supportsComputePixelLocation:s>=10.7&&t.includes("catalog"),supportsComputeAngles:s>=10.91,supportsAdd:p,supportsDelete:p,supportsEditing:p,supportsUpdate:p,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:o,maxRecordCountFactor:void 0,supportsStatistics:!!(a!=null&&a.supportsStatistics),supportsOrderBy:!!(a!=null&&a.supportsOrderBy),supportsDistinct:!!(a!=null&&a.supportsDistinct),supportsPagination:!!(a!=null&&a.supportsPagination),supportsStandardizedQueriesOnly:!!(a!=null&&a.useStandardizedQueries),supportsPercentileStatistics:!!(a!=null&&a.supportsPercentileStatistics),supportsCentroid:!!(a!=null&&a.supportsReturningGeometryCentroid),supportsDistance:!!(a!=null&&a.supportsQueryWithDistance),supportsExtent:!!(a!=null&&a.supportsReturningQueryExtent),supportsGeometryProperties:!!(a!=null&&a.supportsReturningGeometryProperties),supportsHavingClause:!!(a!=null&&a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(a!=null&&a.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return n([l()],i.prototype,"_functionRasterInfos",void 0),n([l()],i.prototype,"_rasterJobHandler",void 0),n([l({dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"_defaultServiceMosaicRule",void 0),n([O("_defaultServiceMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultServiceMosaicRule",null),n([l()],i.prototype,"_cachedRendererJson",void 0),n([l({readOnly:!0})],i.prototype,"_serviceSourceType",void 0),n([O("_serviceSourceType",["serviceSourceType","fields"])],i.prototype,"readServiceSourceType",null),n([l({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),n([O("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),n([l()],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),n([l({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),n([l()],i.prototype,"adjustAspectRatio",void 0),n([l({type:[ne],json:{write:!0}})],i.prototype,"bandIds",void 0),n([O("bandIds")],i.prototype,"readBandIds",null),n([l({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),n([O("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),n([l({type:Number})],i.prototype,"compressionQuality",void 0),n([_("compressionQuality")],i.prototype,"writeCompressionQuality",null),n([l({type:Number})],i.prototype,"compressionTolerance",void 0),n([_("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),n([l({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),n([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),n([l({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),n([l()],i.prototype,"rasterInfo",void 0),n([l({readOnly:!0,type:[Y]})],i.prototype,"fields",void 0),n([l({readOnly:!0})],i.prototype,"fieldsIndex",null),n([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),n([O("service","format",["serviceDataType"])],i.prototype,"readFormat",null),n([l({type:he})],i.prototype,"fullExtent",void 0),n([l({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),n([l({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),n([l({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),n([l({type:String,json:{type:K.jsonValues,read:K.read,write:K.write}})],i.prototype,"interpolation",void 0),n([l()],i.prototype,"minScale",void 0),n([O("service","minScale")],i.prototype,"readMinScale",null),n([l()],i.prototype,"maxScale",void 0),n([O("service","maxScale")],i.prototype,"readMaxScale",null),n([l({type:z})],i.prototype,"mosaicRule",null),n([O("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),n([_("mosaicRule")],i.prototype,"writeMosaicRule",null),n([l()],i.prototype,"multidimensionalInfo",null),n([l({type:Vt})],i.prototype,"multidimensionalSubset",void 0),n([l({json:{type:ne}})],i.prototype,"noData",void 0),n([_("noData")],i.prototype,"writeNoData",null),n([l({type:String,json:{type:pe.jsonValues,read:pe.read,write:pe.write}})],i.prototype,"noDataInterpretation",void 0),n([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),n([O("objectIdField")],i.prototype,"readObjectIdField",null),n([l({})],i.prototype,"geometryType",void 0),n([l({})],i.prototype,"typeIdField",void 0),n([l({})],i.prototype,"types",void 0),n([l({readOnly:!0})],i.prototype,"parsedUrl",null),n([l({type:Function})],i.prototype,"pixelFilter",void 0),n([l()],i.prototype,"raster",void 0),n([l()],i.prototype,"viewId",void 0),n([l({types:jt,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Mt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),n([O("renderer")],i.prototype,"readRenderer",null),n([_("renderer")],i.prototype,"writeRenderer",null),n([l()],i.prototype,"symbolizer",void 0),n([l(lt)],i.prototype,"opacity",void 0),n([l({readOnly:!0})],i.prototype,"rasterFields",null),n([l({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),n([l({type:x})],i.prototype,"renderingRule",null),n([O("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),n([_("renderingRule")],i.prototype,"writeRenderingRule",null),n([l()],i.prototype,"serviceDataType",void 0),n([l({readOnly:!0,type:ie})],i.prototype,"spatialReference",void 0),n([O("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),n([l({json:{type:we.jsonValues}})],i.prototype,"pixelType",void 0),n([O("pixelType")],i.prototype,"readPixelType",null),n([_("pixelType")],i.prototype,"writePixelType",null),n([l({constructOnly:!0,type:Ke})],i.prototype,"serviceRasterInfo",void 0),n([l()],i.prototype,"sourceJSON",void 0),n([l(ut)],i.prototype,"url",void 0),n([l({readOnly:!0})],i.prototype,"version",void 0),n([O("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=n([A("esri.layers.mixins.ArcGISImageService")],i),i};let L=class extends ft(Rt(bt(vt(wt(St(Vi(xt(It(Ft(Ot)))))))))){constructor(...r){super(...r),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(r,i){return typeof r=="string"?{url:r,...i}:r}load(r){const i=S(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(Tt).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(r,i,e){var s;const t=((s=this.renderer)==null?void 0:s.type)==="vector-field";i[e]=t?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(r){const i=this.rasterFields,e=this.title,t=new Set;let s=!1,a=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const o=new Set;s&&o.add("raster.itempixelvalue");for(const u of i){const c=u.name.toLowerCase();o.has(c)||c.includes("raster.servicepixelvalue.")||t.add(u.name)}return a&&t.add("raster.magnitude").add("raster.direction"),Dt({fields:i,title:e},{...r,visibleFieldNames:t})}queryFeatures(r,i){return this.queryRasters(r,i).then(e=>{if(e!=null&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(r,i){return this.queryRasterCount(r,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(r){return Pt(this,r)}};n([l(Nt)],L.prototype,"legendEnabled",void 0),n([l({type:["show","hide"]})],L.prototype,"listMode",void 0),n([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),n([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],L.prototype,"operationalLayerType",void 0),n([_("web-map","operationalLayerType")],L.prototype,"writeOperationalLayerType",null),n([l(_t)],L.prototype,"popupEnabled",void 0),n([l({type:Ct,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],L.prototype,"popupTemplate",void 0),n([l({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),n([l({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),L=n([A("esri.layers.ImageryLayer")],L);const Wi=L;export{Wi as default};
